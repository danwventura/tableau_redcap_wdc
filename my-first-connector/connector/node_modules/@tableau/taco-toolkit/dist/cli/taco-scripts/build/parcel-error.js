"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findBundleNameDuplicates = exports.formatParcelError = void 0;
var path_1 = __importDefault(require("path"));
var diagnostic_1 = __importDefault(require("@parcel/diagnostic"));
function formatParcelError(err) {
    if (!(err instanceof diagnostic_1.default)) {
        return "".concat(err);
    }
    var messages = [];
    messages.push("".concat(err.name));
    var diagnostics = err.diagnostics;
    if (diagnostics.length === 0) {
        messages.push(err.message);
    }
    else {
        diagnostics.forEach(function (diag) {
            var msg = [diag.message];
            if (diag.hints) {
                msg.push('Hints: ' + diag.hints.join(', '));
            }
            if (diag.origin) {
                msg.push('Origin: ' + diag.origin);
            }
            if (Array.isArray(diag.codeFrames)) {
                diag.codeFrames.forEach(function (frame) {
                    var frameMsg = [];
                    if (frame.code) {
                        frameMsg.push('Code ' + frame.code);
                    }
                    if (frame.filePath) {
                        frameMsg.push('At ' + frame.filePath);
                    }
                    frame.codeHighlights.forEach(function (hl) {
                        if (hl.message && hl.message !== diag.message) {
                            frameMsg.push(hl.message);
                        }
                        frameMsg.push("[Ln ".concat(hl.start.line, ", Col ").concat(hl.start.column, "]"));
                    });
                    msg.push(frameMsg.join(', '));
                });
            }
            messages.push(msg.join('. '));
        });
    }
    return messages.join('. ');
}
exports.formatParcelError = formatParcelError;
/**
 * Bundles must have unique names. This report which entries produce duplicate names based on the file name w/o the extension.
 * @returns an array of duplicates with the target dir. e.g. [[MyFetcher.js, MyFetcher.ts]]
 */
function findBundleNameDuplicates(entries) {
    var counts = {};
    entries.forEach(function (entry) {
        var _a = path_1.default.parse(entry), name = _a.name, base = _a.base;
        if (counts[name] === undefined) {
            counts[name] = [base];
        }
        else {
            counts[name].push(base);
        }
    });
    return Object.values(counts).filter(function (names) { return names.length > 1; });
}
exports.findBundleNameDuplicates = findBundleNameDuplicates;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyY2VsLWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NsaS90YWNvLXNjcmlwdHMvYnVpbGQvcGFyY2VsLWVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDhDQUF1QjtBQUN2QixrRUFBb0Q7QUFFcEQsU0FBZ0IsaUJBQWlCLENBQUMsR0FBWTtJQUM1QyxJQUFJLENBQUMsQ0FBQyxHQUFHLFlBQVksb0JBQW1CLENBQUMsRUFBRTtRQUN6QyxPQUFPLFVBQUcsR0FBRyxDQUFFLENBQUE7S0FDaEI7SUFFRCxJQUFNLFFBQVEsR0FBYSxFQUFFLENBQUE7SUFDN0IsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUUsQ0FBQyxDQUFBO0lBRXBCLElBQUEsV0FBVyxHQUFLLEdBQUcsWUFBUixDQUFRO0lBQzNCLElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDNUIsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUE7S0FDM0I7U0FBTTtRQUNMLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBQyxJQUFJO1lBQ3ZCLElBQU0sR0FBRyxHQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1lBQ3BDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDZCxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO2FBQzVDO1lBQ0QsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNmLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTthQUNuQztZQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUU7Z0JBQ2xDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBSztvQkFDNUIsSUFBTSxRQUFRLEdBQWEsRUFBRSxDQUFBO29CQUM3QixJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUU7d0JBQ2QsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFBO3FCQUNwQztvQkFDRCxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUU7d0JBQ2xCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQTtxQkFDdEM7b0JBRUQsS0FBSyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsVUFBQyxFQUFFO3dCQUM5QixJQUFJLEVBQUUsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLE9BQU8sS0FBSyxJQUFJLENBQUMsT0FBTyxFQUFFOzRCQUM3QyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQTt5QkFDMUI7d0JBQ0QsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxtQkFBUyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sTUFBRyxDQUFDLENBQUE7b0JBQ2hFLENBQUMsQ0FBQyxDQUFBO29CQUNGLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO2dCQUMvQixDQUFDLENBQUMsQ0FBQTthQUNIO1lBQ0QsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7UUFDL0IsQ0FBQyxDQUFDLENBQUE7S0FDSDtJQUNELE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUM1QixDQUFDO0FBNUNELDhDQTRDQztBQUVEOzs7R0FHRztBQUNILFNBQWdCLHdCQUF3QixDQUFDLE9BQWlCO0lBQ3hELElBQU0sTUFBTSxHQUE2QixFQUFFLENBQUE7SUFDM0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEtBQUs7UUFDZCxJQUFBLEtBQWlCLGNBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQWhDLElBQUksVUFBQSxFQUFFLElBQUksVUFBc0IsQ0FBQTtRQUV4QyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxTQUFTLEVBQUU7WUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUE7U0FDdEI7YUFBTTtZQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7U0FDeEI7SUFDSCxDQUFDLENBQUMsQ0FBQTtJQUVGLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBaEIsQ0FBZ0IsQ0FBQyxDQUFBO0FBQ2xFLENBQUM7QUFiRCw0REFhQyJ9