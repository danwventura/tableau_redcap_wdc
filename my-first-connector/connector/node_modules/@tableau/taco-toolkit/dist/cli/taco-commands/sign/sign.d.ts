import { ExecutionState } from '../utils/command';
interface GenerateCsrConfig {
    tacoRootPath: string;
}
interface SignTacoConfig {
    currentPath: string;
    keystorePath: string;
}
/**
 * Creates a signing resources folder in the connector folder that contains a newly
 * created keypair/keystore, a self-signed certificate, and a certificate signing
 * request that can be sent to a trusted CA for signing.
 */
export declare function generateCsr(config: GenerateCsrConfig, state: ExecutionState): void;
/**
 * Prompts the user for their keystore password, their signature alias and what they
 * want their signed TACO to be named, and then signs their .taco file while also
 * prompting the user to see if they want to delete the original.
 *
 * @param keystorePath
 */
export declare function signTacoFile(config: SignTacoConfig, state: ExecutionState): Promise<void>;
export {};
