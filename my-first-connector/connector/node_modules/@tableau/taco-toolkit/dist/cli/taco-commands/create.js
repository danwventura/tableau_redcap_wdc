"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.program = exports.createCommand = void 0;
var commander_1 = require("commander");
var path_1 = __importDefault(require("path"));
var command_1 = require("./command");
var create_1 = require("./create/create");
var git_setup_1 = require("./create/git-setup");
var project_name_1 = require("./create/project-name");
var boilerplate_choices_1 = require("./utils/boilerplate-choices");
var command_2 = require("./utils/command");
var console_1 = require("./utils/console");
var spinner_1 = __importDefault(require("./utils/spinner"));
function createCommand() {
    return (0, command_1.createCommand)('create', 'create a boilerplate connector', {
        setup: setup,
        handler: handler,
        withCommonOptions: true,
        loggingOptions: {
            verbose: true,
        },
    });
}
exports.createCommand = createCommand;
exports.program = createCommand();
function setup(program) {
    return program
        .argument('<project-name>', 'The folder name of the taco project')
        .addOption(new commander_1.Option('-b, --boilerplate <boilerplate-name>', 'boilerplate option')
        .choices(boilerplate_choices_1.boilerplateChoices)
        .makeOptionMandatory(true))
        .option('--git', 'initialize the taco project as a git repo', false)
        .addOption(
    // Currently, we only have the use case for testing, so hide this option for now.
    new commander_1.Option('--skip-install', 'skip installing dependency packages').default(false).hideHelp())
        .addOption(
    // TODO: this option is to support the existing old project setup. Remove this once the adoption work is done.
    new commander_1.Option('--skip-toolkit', 'skip adding taco-toolkit as a project local dependency').default(false).hideHelp());
}
function handler(program) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, boilerplate, git, skipInstall, skipToolkit, verbose, _b, projectName, errors, projectPath;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _a = program.optsWithGlobals(), boilerplate = _a.boilerplate, git = _a.git, skipInstall = _a.skipInstall, skipToolkit = _a.skipToolkit, verbose = _a.verbose;
                    _b = __read(program.processedArgs, 1), projectName = _b[0];
                    errors = (0, project_name_1.validateProjectName)(projectName);
                    if (errors.length > 0) {
                        (0, console_1.consoleError)("Invalid project name '".concat(projectName, "'. Errors:\n").concat(errors.join('\n')));
                        process.exit(1);
                    }
                    projectPath = path_1.default.join(process.cwd(), projectName);
                    (0, command_2.exitIfPathExists)(projectPath, "The directory '".concat(projectName, "' already exists"));
                    return [4 /*yield*/, (0, create_1.createTaco)({
                            projectName: projectName,
                            boilerplate: boilerplate,
                            skipInstall: skipInstall,
                            skipToolkit: skipToolkit,
                        }, {
                            spinner: new spinner_1.default(verbose),
                            verbose: verbose,
                        })];
                case 1:
                    _c.sent();
                    if (git) {
                        (0, git_setup_1.setupGitRepo)(projectPath);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NsaS90YWNvLWNvbW1hbmRzL2NyZWF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsdUNBQTJDO0FBQzNDLDhDQUF1QjtBQUV2QixxQ0FBaUU7QUFDakUsMENBQTRDO0FBQzVDLGdEQUFpRDtBQUNqRCxzREFBMkQ7QUFDM0QsbUVBQWdFO0FBQ2hFLDJDQUFrRDtBQUNsRCwyQ0FBOEM7QUFDOUMsNERBQXFDO0FBRXJDLFNBQWdCLGFBQWE7SUFDM0IsT0FBTyxJQUFBLHVCQUFvQixFQUFDLFFBQVEsRUFBRSxnQ0FBZ0MsRUFBRTtRQUN0RSxLQUFLLE9BQUE7UUFDTCxPQUFPLFNBQUE7UUFDUCxpQkFBaUIsRUFBRSxJQUFJO1FBQ3ZCLGNBQWMsRUFBRTtZQUNkLE9BQU8sRUFBRSxJQUFJO1NBQ2Q7S0FDRixDQUFDLENBQUE7QUFDSixDQUFDO0FBVEQsc0NBU0M7QUFFWSxRQUFBLE9BQU8sR0FBRyxhQUFhLEVBQUUsQ0FBQTtBQUV0QyxTQUFTLEtBQUssQ0FBQyxPQUFnQjtJQUM3QixPQUFPLE9BQU87U0FDWCxRQUFRLENBQUMsZ0JBQWdCLEVBQUUscUNBQXFDLENBQUM7U0FDakUsU0FBUyxDQUNSLElBQUksa0JBQU0sQ0FBQyxzQ0FBc0MsRUFBRSxvQkFBb0IsQ0FBQztTQUNyRSxPQUFPLENBQUMsd0NBQWtCLENBQUM7U0FDM0IsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQzdCO1NBQ0EsTUFBTSxDQUFDLE9BQU8sRUFBRSwyQ0FBMkMsRUFBRSxLQUFLLENBQUM7U0FDbkUsU0FBUztJQUNSLGlGQUFpRjtJQUNqRixJQUFJLGtCQUFNLENBQUMsZ0JBQWdCLEVBQUUscUNBQXFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQzlGO1NBQ0EsU0FBUztJQUNSLDhHQUE4RztJQUM5RyxJQUFJLGtCQUFNLENBQUMsZ0JBQWdCLEVBQUUsd0RBQXdELENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQ2pILENBQUE7QUFDTCxDQUFDO0FBRUQsU0FBZSxPQUFPLENBQUMsT0FBZ0I7Ozs7OztvQkFDL0IsS0FBMEQsT0FBTyxDQUFDLGVBQWUsRUFBRSxFQUFqRixXQUFXLGlCQUFBLEVBQUUsR0FBRyxTQUFBLEVBQUUsV0FBVyxpQkFBQSxFQUFFLFdBQVcsaUJBQUEsRUFBRSxPQUFPLGFBQUEsQ0FBOEI7b0JBRW5GLEtBQUEsT0FBZ0IsT0FBTyxDQUFDLGFBQWEsSUFBQSxFQUFwQyxXQUFXLFFBQUEsQ0FBeUI7b0JBRXJDLE1BQU0sR0FBRyxJQUFBLGtDQUFtQixFQUFDLFdBQVcsQ0FBQyxDQUFBO29CQUMvQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO3dCQUNyQixJQUFBLHNCQUFZLEVBQUMsZ0NBQXlCLFdBQVcseUJBQWUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBRSxDQUFDLENBQUE7d0JBQ3BGLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7cUJBQ2hCO29CQUVLLFdBQVcsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFXLENBQUMsQ0FBQTtvQkFDekQsSUFBQSwwQkFBZ0IsRUFBQyxXQUFXLEVBQUUseUJBQWtCLFdBQVcscUJBQWtCLENBQUMsQ0FBQTtvQkFFOUUscUJBQU0sSUFBQSxtQkFBVSxFQUNkOzRCQUNFLFdBQVcsYUFBQTs0QkFDWCxXQUFXLGFBQUE7NEJBQ1gsV0FBVyxhQUFBOzRCQUNYLFdBQVcsYUFBQTt5QkFDWixFQUNEOzRCQUNFLE9BQU8sRUFBRSxJQUFJLGlCQUFPLENBQUMsT0FBTyxDQUFDOzRCQUM3QixPQUFPLFNBQUE7eUJBQ1IsQ0FDRixFQUFBOztvQkFYRCxTQVdDLENBQUE7b0JBRUQsSUFBSSxHQUFHLEVBQUU7d0JBQ1AsSUFBQSx3QkFBWSxFQUFDLFdBQVcsQ0FBQyxDQUFBO3FCQUMxQjs7Ozs7Q0FDRiJ9