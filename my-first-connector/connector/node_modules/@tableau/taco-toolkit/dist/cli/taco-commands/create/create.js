"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTaco = void 0;
var fs_extra_1 = __importDefault(require("fs-extra"));
var path_1 = __importDefault(require("path"));
var error_codes_1 = require("../../../shared/errors/error-codes");
var error_source_1 = require("../../../shared/errors/error-source");
var status_code_1 = require("../../../shared/errors/status-code");
var install_1 = require("../build/install");
var connector_1 = require("../utils/connector");
var constants_1 = require("../utils/constants");
var logging_1 = require("../utils/logging");
var toolkit_paths_1 = require("../utils/toolkit-paths");
var json_files_1 = require("./json-files");
var excludeItems = [
    'dist',
    'tmp',
    'log',
    '.eps',
    '.parcel-cache',
    'node_modules',
    'package-lock.json',
    'temp',
];
//todo add a unit test
function createTaco(config, state) {
    return __awaiter(this, void 0, void 0, function () {
        var boilerplate, projectName, skipInstall, skipToolkit, spinner, tacoRootPath, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    boilerplate = config.boilerplate, projectName = config.projectName, skipInstall = config.skipInstall, skipToolkit = config.skipToolkit;
                    spinner = state.spinner;
                    tacoRootPath = path_1.default.join(process.cwd(), projectName);
                    spinner.start("Start creating taco project with boilerplate '".concat(boilerplate, "'"));
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, copyBoilerplate(boilerplate, tacoRootPath)];
                case 2:
                    _a.sent();
                    (0, json_files_1.fillPackageJson)(tacoRootPath, projectName, skipToolkit);
                    (0, json_files_1.fillConnectorJson)(tacoRootPath, projectName);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    spinner.fail('Failed to create taco connector boilerplate');
                    (0, logging_1.logFatalError)({
                        statusCode: status_code_1.StatusCode.Cancelled,
                        errorSource: error_source_1.ErrorSources.System,
                        errorCode: error_codes_1.ErrorCodes.QIC79P0A,
                        message: 'Unable to create the taco connector',
                        error: error_1,
                    });
                    process.exit(constants_1.TACO_COMMAND_ERROR_EXIT_CODE);
                    return [3 /*break*/, 4];
                case 4:
                    spinner.success("Successfully created taco project '".concat(projectName, "'"));
                    // TODO: remove this when all boilerplate is moved to new dependency setup
                    if ((0, connector_1.isOldDependencySetup)(tacoRootPath) || skipInstall) {
                        return [2 /*return*/];
                    }
                    (0, install_1.installDependencies)(tacoRootPath, state);
                    spinner.info('You may use the following commands to begin:\n' +
                        "    cd ".concat(path_1.default.join(projectName, 'connector'), "\n") +
                        '    npm run build\n' +
                        '    npm start\n');
                    return [2 /*return*/];
            }
        });
    });
}
exports.createTaco = createTaco;
function copyBoilerplate(boilerplate, tacoRootPath) {
    return fs_extra_1.default.copy((0, toolkit_paths_1.getBoilerplatePath)(boilerplate), tacoRootPath, {
        errorOnExist: true,
        overwrite: false,
        preserveTimestamps: false,
        recursive: true,
        filter: function (src) {
            var basename = path_1.default.basename(src);
            return !excludeItems.includes(basename);
        },
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NsaS90YWNvLWNvbW1hbmRzL2NyZWF0ZS9jcmVhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0RBQTBCO0FBQzFCLDhDQUF1QjtBQUV2QixrRUFBK0Q7QUFDL0Qsb0VBQWtFO0FBQ2xFLGtFQUErRDtBQUMvRCw0Q0FBc0Q7QUFHdEQsZ0RBQXlEO0FBQ3pELGdEQUFpRTtBQUNqRSw0Q0FBZ0Q7QUFDaEQsd0RBQTJEO0FBQzNELDJDQUFpRTtBQUVqRSxJQUFNLFlBQVksR0FBRztJQUNuQixNQUFNO0lBQ04sS0FBSztJQUNMLEtBQUs7SUFDTCxNQUFNO0lBQ04sZUFBZTtJQUNmLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsTUFBTTtDQUNQLENBQUE7QUFTRCxzQkFBc0I7QUFDdEIsU0FBc0IsVUFBVSxDQUFDLE1BQW9CLEVBQUUsS0FBcUI7Ozs7OztvQkFDbEUsV0FBVyxHQUE0QyxNQUFNLFlBQWxELEVBQUUsV0FBVyxHQUErQixNQUFNLFlBQXJDLEVBQUUsV0FBVyxHQUFrQixNQUFNLFlBQXhCLEVBQUUsV0FBVyxHQUFLLE1BQU0sWUFBWCxDQUFXO29CQUM3RCxPQUFPLEdBQUssS0FBSyxRQUFWLENBQVU7b0JBRW5CLFlBQVksR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFXLENBQUMsQ0FBQTtvQkFFMUQsT0FBTyxDQUFDLEtBQUssQ0FBQyx3REFBaUQsV0FBVyxNQUFHLENBQUMsQ0FBQTs7OztvQkFHNUUscUJBQU0sZUFBZSxDQUFDLFdBQVcsRUFBRSxZQUFZLENBQUMsRUFBQTs7b0JBQWhELFNBQWdELENBQUE7b0JBQ2hELElBQUEsNEJBQWUsRUFBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFBO29CQUN2RCxJQUFBLDhCQUFpQixFQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQTs7OztvQkFFNUMsT0FBTyxDQUFDLElBQUksQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFBO29CQUMzRCxJQUFBLHVCQUFhLEVBQUM7d0JBQ1osVUFBVSxFQUFFLHdCQUFVLENBQUMsU0FBUzt3QkFDaEMsV0FBVyxFQUFFLDJCQUFZLENBQUMsTUFBTTt3QkFDaEMsU0FBUyxFQUFFLHdCQUFVLENBQUMsUUFBUTt3QkFDOUIsT0FBTyxFQUFFLHFDQUFxQzt3QkFDOUMsS0FBSyxTQUFBO3FCQUNOLENBQUMsQ0FBQTtvQkFDRixPQUFPLENBQUMsSUFBSSxDQUFDLHdDQUE0QixDQUFDLENBQUE7OztvQkFHNUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyw2Q0FBc0MsV0FBVyxNQUFHLENBQUMsQ0FBQTtvQkFFckUsMEVBQTBFO29CQUMxRSxJQUFJLElBQUEsZ0NBQW9CLEVBQUMsWUFBWSxDQUFDLElBQUksV0FBVyxFQUFFO3dCQUNyRCxzQkFBTTtxQkFDUDtvQkFFRCxJQUFBLDZCQUFtQixFQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQTtvQkFDeEMsT0FBTyxDQUFDLElBQUksQ0FDVixnREFBZ0Q7d0JBQzlDLGlCQUFVLGNBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxPQUFJO3dCQUNqRCxxQkFBcUI7d0JBQ3JCLGlCQUFpQixDQUNwQixDQUFBOzs7OztDQUNGO0FBdENELGdDQXNDQztBQUVELFNBQVMsZUFBZSxDQUFDLFdBQW1CLEVBQUUsWUFBb0I7SUFDaEUsT0FBTyxrQkFBRyxDQUFDLElBQUksQ0FBQyxJQUFBLGtDQUFrQixFQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksRUFBRTtRQUM3RCxZQUFZLEVBQUUsSUFBSTtRQUNsQixTQUFTLEVBQUUsS0FBSztRQUNoQixrQkFBa0IsRUFBRSxLQUFLO1FBQ3pCLFNBQVMsRUFBRSxJQUFJO1FBQ2YsTUFBTSxFQUFFLFVBQUMsR0FBVztZQUNsQixJQUFNLFFBQVEsR0FBRyxjQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1lBQ25DLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ3pDLENBQUM7S0FDRixDQUFDLENBQUE7QUFDSixDQUFDIn0=