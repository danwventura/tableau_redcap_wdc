"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.packTaco = void 0;
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var inquirer_1 = __importDefault(require("inquirer"));
var constants_1 = require("../utils/constants");
var command_1 = require("../utils/command");
var connector_json_1 = require("../utils/connector-json");
var connector_1 = require("../utils/connector");
var status_code_1 = require("../../../shared/errors/status-code");
var error_source_1 = require("../../../shared/errors/error-source");
var error_codes_1 = require("../../../shared/errors/error-codes");
var logging_1 = require("../utils/logging");
var console_1 = require("../utils/console");
var taco_files_1 = require("./taco-files");
var COMMON_PACK_ITEMS = __spreadArray([
    'dist',
    'manifest.xml',
    'connection-fields.xml',
    'connection-metadata.xml'
], __read([
    // include the json files for 'taco show' cmd to display metadata info
    'connector.json',
    'package.json',
].map(function (item) { return path_1.default.join('connector', item); })), false);
function packTaco(config, state) {
    return __awaiter(this, void 0, void 0, function () {
        var spinner, tacoRootPath, destPath, extraFiles, force, nameOnly, connectorJsonPath, connectorJson, fileName, destFilePath, overwrite, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    spinner = state.spinner;
                    tacoRootPath = config.tacoRootPath, destPath = config.destPath, extraFiles = config.extraFiles, force = config.force, nameOnly = config.nameOnly;
                    connectorJsonPath = (0, connector_1.getConnectorJsonPath)(tacoRootPath);
                    connectorJson = (0, connector_json_1.getConnectorJson)(connectorJsonPath);
                    fileName = (0, taco_files_1.getPackedTacoFilename)(connectorJson, nameOnly);
                    destFilePath = path_1.default.resolve(destPath, fileName);
                    if (!(!force && fs_1.default.existsSync(destFilePath))) return [3 /*break*/, 2];
                    return [4 /*yield*/, askForOverwrite(fileName)];
                case 1:
                    overwrite = _a.sent();
                    if (!overwrite) {
                        (0, console_1.consoleWarn)('taco pack has been cancelled.');
                        process.exit(0);
                    }
                    _a.label = 2;
                case 2:
                    spinner.start('Starting packing connector...');
                    result = packageConnector(connectorJson, tacoRootPath, destFilePath, extraFiles);
                    if ((0, command_1.isErrorResult)(result)) {
                        spinner.fail('Failed to pack connector.');
                        (0, logging_1.logFatalError)(result.error);
                        process.exit(constants_1.TACO_COMMAND_ERROR_EXIT_CODE);
                    }
                    spinner.success("Pack succeeded! Packed ".concat(fileName, " at ").concat(destFilePath));
                    return [2 /*return*/];
            }
        });
    });
}
exports.packTaco = packTaco;
function getPackItems(connectorJson, extraFiles) {
    var packItemPaths = __spreadArray([], __read(COMMON_PACK_ITEMS), false);
    if ((0, connector_json_1.isOauthConnector)(connectorJson)) {
        packItemPaths.push('oauth-config.xml');
    }
    if (extraFiles.length > 0) {
        packItemPaths.push.apply(packItemPaths, __spreadArray([], __read(extraFiles), false));
    }
    return packItemPaths;
}
function askForOverwrite(filename) {
    return __awaiter(this, void 0, void 0, function () {
        var overwrite;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, inquirer_1.default.prompt({
                        name: 'overwrite',
                        message: "The file '".concat(filename, "' already exists. Do you want to replace it?"),
                        type: 'confirm',
                        default: false,
                    })];
                case 1:
                    overwrite = (_a.sent()).overwrite;
                    return [2 /*return*/, overwrite];
            }
        });
    });
}
function packageConnector(connectorJson, tacoRootPath, destFilePath, extraFiles) {
    // Package app and dist folder and all .xml and .tdr files
    logging_1.logger.debug("Packaging connector to path: ".concat(destFilePath));
    var packItems = getPackItems(connectorJson, extraFiles);
    // validate if all of the files exist
    var nonExistedPaths = packItems
        .map(function (item) { return path_1.default.resolve(tacoRootPath, item); }) // validate against tacoRootPath
        .filter(function (itemPath) { return !fs_1.default.existsSync(itemPath); });
    if (nonExistedPaths.length > 0) {
        return {
            state: 'error',
            error: {
                statusCode: status_code_1.StatusCode.NotFound,
                errorSource: error_source_1.ErrorSources.Content,
                errorCode: error_codes_1.ErrorCodes.M3N2YI8H,
                message: "Missing required pack files: ".concat(nonExistedPaths),
            },
        };
    }
    // note: jar command always overwrites the existing file with same name
    var result = (0, command_1.executeCmd)('jar', __spreadArray(['cf', destFilePath, '-C', tacoRootPath], __read(packItems), false));
    if ((0, command_1.isErrorResult)(result)) {
        var resultError = result.error;
        return {
            state: 'error',
            error: {
                statusCode: status_code_1.StatusCode.Cancelled,
                errorSource: error_source_1.ErrorSources.System,
                errorCode: error_codes_1.ErrorCodes.Y4GXMCZP,
                message: "Failed to pack connector.\nDetailed information: ".concat(resultError.stdout),
                error: resultError.error,
            },
        };
    }
    if (!fs_1.default.existsSync(destFilePath)) {
        return {
            state: 'error',
            error: {
                statusCode: status_code_1.StatusCode.NotFound,
                errorSource: error_source_1.ErrorSources.Content,
                errorCode: error_codes_1.ErrorCodes.IRX591ZY,
                message: "Pack is complete, but taco file failed to be created at: ".concat(destFilePath),
            },
        };
    }
    return { state: 'success' };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGkvdGFjby1jb21tYW5kcy9wYWNrL3BhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDBDQUFtQjtBQUNuQiw4Q0FBdUI7QUFDdkIsc0RBQStCO0FBRS9CLGdEQUFpRTtBQUNqRSw0Q0FBb0Y7QUFDcEYsMERBQTRFO0FBQzVFLGdEQUF5RDtBQUN6RCxrRUFBK0Q7QUFDL0Qsb0VBQWtFO0FBQ2xFLGtFQUErRDtBQUUvRCw0Q0FBb0U7QUFDcEUsNENBQThDO0FBQzlDLDJDQUFvRDtBQVVwRCxJQUFNLGlCQUFpQjtJQUNyQixNQUFNO0lBQ04sY0FBYztJQUNkLHVCQUF1QjtJQUN2Qix5QkFBeUI7VUFDdEI7SUFDRCxzRUFBc0U7SUFDdEUsZ0JBQWdCO0lBQ2hCLGNBQWM7Q0FDZixDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUksSUFBSyxPQUFBLGNBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxFQUE1QixDQUE0QixDQUFDLFNBQzlDLENBQUE7QUFFRCxTQUFzQixRQUFRLENBQUMsTUFBa0IsRUFBRSxLQUFxQjs7Ozs7O29CQUM5RCxPQUFPLEdBQUssS0FBSyxRQUFWLENBQVU7b0JBQ2pCLFlBQVksR0FBNEMsTUFBTSxhQUFsRCxFQUFFLFFBQVEsR0FBa0MsTUFBTSxTQUF4QyxFQUFFLFVBQVUsR0FBc0IsTUFBTSxXQUE1QixFQUFFLEtBQUssR0FBZSxNQUFNLE1BQXJCLEVBQUUsUUFBUSxHQUFLLE1BQU0sU0FBWCxDQUFXO29CQUVoRSxpQkFBaUIsR0FBRyxJQUFBLGdDQUFvQixFQUFDLFlBQVksQ0FBQyxDQUFBO29CQUN0RCxhQUFhLEdBQUcsSUFBQSxpQ0FBZ0IsRUFBQyxpQkFBaUIsQ0FBQyxDQUFBO29CQUVu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