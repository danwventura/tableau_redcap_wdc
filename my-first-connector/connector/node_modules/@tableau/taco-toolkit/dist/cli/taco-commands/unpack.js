"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCommand = exports.program = void 0;
var command_1 = require("./command");
var unpack_1 = require("./unpack/unpack");
var command_2 = require("./utils/command");
var console_1 = require("./utils/console");
var spinner_1 = __importDefault(require("./utils/spinner"));
var connector_1 = require("./utils/connector");
exports.program = createCommand();
function createCommand() {
    return (0, command_1.createCommand)('unpack', 'unpack the .taco file into the current directory', {
        setup: setup,
        handler: handler,
        withCommonOptions: true,
        loggingOptions: {
            verbose: true,
        },
    });
}
exports.createCommand = createCommand;
function setup(program) {
    return program
        .argument('<taco>', 'packed .taco filename')
        .option('-d, --dest <path>', 'unpack connector to a certain location');
}
function handler(program) {
    var _a = __read(program.processedArgs, 1), tacoName = _a[0];
    var _b = program.optsWithGlobals(), dest = _b.dest, verbose = _b.verbose;
    if (!(0, connector_1.isValidTacoFile)(tacoName)) {
        (0, console_1.consoleError)("The target file '".concat(tacoName, "' is not a valid .taco file."));
        process.exit(1);
    }
    (0, command_2.exitIfNonExistPath)(tacoName, "The taco file '".concat(tacoName, "' could not be found at current path '").concat(process.cwd(), "'"));
    if (dest) {
        (0, command_2.exitIfNonExistPath)(dest, "The taco unpack destination '".concat(dest, "' could not be found or inaccessible"));
    }
    (0, unpack_1.unpackTaco)({
        tacoName: tacoName,
        destPath: dest !== null && dest !== void 0 ? dest : process.cwd(),
    }, {
        spinner: new spinner_1.default(verbose),
        verbose: verbose,
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NsaS90YWNvLWNvbW1hbmRzL3VucGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEscUNBQWlFO0FBQ2pFLDBDQUE0QztBQUM1QywyQ0FBb0Q7QUFDcEQsMkNBQThDO0FBQzlDLDREQUFxQztBQUNyQywrQ0FBbUQ7QUFFdEMsUUFBQSxPQUFPLEdBQUcsYUFBYSxFQUFFLENBQUE7QUFFdEMsU0FBZ0IsYUFBYTtJQUMzQixPQUFPLElBQUEsdUJBQW9CLEVBQUMsUUFBUSxFQUFFLGtEQUFrRCxFQUFFO1FBQ3hGLEtBQUssT0FBQTtRQUNMLE9BQU8sU0FBQTtRQUNQLGlCQUFpQixFQUFFLElBQUk7UUFDdkIsY0FBYyxFQUFFO1lBQ2QsT0FBTyxFQUFFLElBQUk7U0FDZDtLQUNGLENBQUMsQ0FBQTtBQUNKLENBQUM7QUFURCxzQ0FTQztBQUVELFNBQVMsS0FBSyxDQUFDLE9BQWdCO0lBQzdCLE9BQU8sT0FBTztTQUNYLFFBQVEsQ0FBQyxRQUFRLEVBQUUsdUJBQXVCLENBQUM7U0FDM0MsTUFBTSxDQUFDLG1CQUFtQixFQUFFLHdDQUF3QyxDQUFDLENBQUE7QUFDMUUsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFDLE9BQWdCO0lBQ3pCLElBQUEsS0FBQSxPQUFhLE9BQU8sQ0FBQyxhQUFhLElBQUEsRUFBakMsUUFBUSxRQUF5QixDQUFBO0lBQ2xDLElBQUEsS0FBb0IsT0FBTyxDQUFDLGVBQWUsRUFBRSxFQUEzQyxJQUFJLFVBQUEsRUFBRSxPQUFPLGFBQThCLENBQUE7SUFFbkQsSUFBSSxDQUFDLElBQUEsMkJBQWUsRUFBQyxRQUFRLENBQUMsRUFBRTtRQUM5QixJQUFBLHNCQUFZLEVBQUMsMkJBQW9CLFFBQVEsaUNBQThCLENBQUMsQ0FBQTtRQUN4RSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0tBQ2hCO0lBRUQsSUFBQSw0QkFBa0IsRUFBQyxRQUFRLEVBQUUseUJBQWtCLFFBQVEsbURBQXlDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsTUFBRyxDQUFDLENBQUE7SUFFakgsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFBLDRCQUFrQixFQUFDLElBQUksRUFBRSx1Q0FBZ0MsSUFBSSx5Q0FBc0MsQ0FBQyxDQUFBO0tBQ3JHO0lBRUQsSUFBQSxtQkFBVSxFQUNSO1FBQ0UsUUFBUSxVQUFBO1FBQ1IsUUFBUSxFQUFFLElBQUksYUFBSixJQUFJLGNBQUosSUFBSSxHQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7S0FDaEMsRUFDRDtRQUNFLE9BQU8sRUFBRSxJQUFJLGlCQUFPLENBQUMsT0FBTyxDQUFDO1FBQzdCLE9BQU8sU0FBQTtLQUNSLENBQ0YsQ0FBQTtBQUNILENBQUMifQ==