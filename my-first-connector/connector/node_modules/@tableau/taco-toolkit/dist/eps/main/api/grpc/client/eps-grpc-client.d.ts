import { EpsClient } from '../proto/build/eps_grpc_pb';
import { ExtractResponse, TerminateExtractorResponse } from '../proto/build/eps_pb';
export declare function createEpsGrpcClient(grpcPort: number | string): EpsClient;
export declare class EpsGrpcClient {
    readonly client: EpsClient;
    constructor(grpcPort: string | number);
    getAppUrl({ connectorClass, connectionId, callerType, pluginPath, }: {
        connectorClass: string;
        connectionId: string;
        callerType: string;
        pluginPath: string;
    }): Promise<string>;
    launch({ connectorClass, connectionId, callerId, pluginPath, connectionData, epsInstanceId, extractorMode, language, locale, accessToken, refreshToken, }: {
        connectorClass: string;
        connectionId: string;
        callerId: string;
        pluginPath: string;
        connectionData: any;
        epsInstanceId: string;
        extractorMode: string;
        language: string;
        locale: string;
        accessToken?: string;
        refreshToken?: string;
    }): Promise<ExtractResponse>;
    extract({ connectorClass, connectionId, callerId, pluginPath, connectionData, epsInstanceId, language, locale, accessToken, refreshToken, }: {
        connectorClass: string;
        connectionId: string;
        callerId: string;
        pluginPath: string;
        connectionData: any;
        epsInstanceId: string;
        language: string;
        locale: string;
        accessToken?: string;
        refreshToken?: string;
    }): Promise<ExtractResponse>;
    terminateExtractor({ connectionId, extractorIds }: {
        connectionId: string;
        extractorIds: string[];
    }): Promise<TerminateExtractorResponse>;
}
