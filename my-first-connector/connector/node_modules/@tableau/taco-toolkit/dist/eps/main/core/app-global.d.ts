import { CallerType } from '../../../shared/enums/caller-type';
import { PortManager } from '../../modules/port-manager';
import { ConnectionManager } from '../components/connection-manager';
import { EPSProcessManager } from '../components/process-manager';
import { TacoInitializer } from '../components/taco-initializer';
import { I18nConfig } from '../../types/i18n-config';
export interface InitConfig {
    parentPid: number;
    callerType: CallerType;
    epsInstanceId: string;
    epsTempDirPath: string;
    portRange: [number, number];
    reservedPorts: number[];
    connectorAppDir: string;
    connectorHandlerDir: string;
    i18nConfig: I18nConfig;
}
declare class AppGlobal {
    private static instance;
    private readonly _processManager;
    private readonly _portManager;
    private readonly _connectionManager;
    private readonly _tacoInitializer;
    private constructor();
    static init(config: InitConfig): void;
    static get processManager(): EPSProcessManager;
    static get portManager(): PortManager;
    static get connectionManager(): ConnectionManager;
    static get tacoInitializer(): TacoInitializer;
}
export default AppGlobal;
