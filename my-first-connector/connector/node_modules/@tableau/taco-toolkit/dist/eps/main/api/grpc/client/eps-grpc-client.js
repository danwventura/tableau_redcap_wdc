"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EpsGrpcClient = exports.createEpsGrpcClient = void 0;
var grpc_js_1 = require("@grpc/grpc-js");
var eps_grpc_pb_1 = require("../proto/build/eps_grpc_pb");
var eps_pb_1 = require("../proto/build/eps_pb");
//TODO: change credential to be secure?
function createEpsGrpcClient(grpcPort) {
    return new eps_grpc_pb_1.EpsClient("localhost:".concat(grpcPort), grpc_js_1.credentials.createInsecure());
}
exports.createEpsGrpcClient = createEpsGrpcClient;
var EpsGrpcClient = /** @class */ (function () {
    function EpsGrpcClient(grpcPort) {
        this.client = createEpsGrpcClient(grpcPort);
    }
    EpsGrpcClient.prototype.getAppUrl = function (_a) {
        var _this = this;
        var connectorClass = _a.connectorClass, connectionId = _a.connectionId, callerType = _a.callerType, pluginPath = _a.pluginPath;
        return new Promise(function (resolve, reject) {
            var request = new eps_pb_1.AppUrlRequest();
            request.setConnectionId(connectionId);
            request.setCallerType(callerType);
            request.setConnectorClass(connectorClass);
            request.setPluginPath(pluginPath);
            _this.client.getAppUrl(request, function (error, response) {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(response.toObject().connectorAppUrl);
                }
            });
        });
    };
    EpsGrpcClient.prototype.launch = function (_a) {
        var _this = this;
        var connectorClass = _a.connectorClass, connectionId = _a.connectionId, callerId = _a.callerId, pluginPath = _a.pluginPath, connectionData = _a.connectionData, epsInstanceId = _a.epsInstanceId, extractorMode = _a.extractorMode, language = _a.language, locale = _a.locale, accessToken = _a.accessToken, refreshToken = _a.refreshToken;
        return new Promise(function (resolve, reject) {
            var request = new eps_pb_1.LaunchRequest();
            var connData = JSON.stringify(connectionData);
            request.setConnectionId(connectionId);
            request.setCallerId(callerId);
            request.setConnectorClass(connectorClass);
            request.setPluginPath(pluginPath);
            request.setConnectionData(connData);
            request.setEpsInstanceId(epsInstanceId);
            request.setExtractorMode(extractorMode);
            request.setLanguage(language);
            request.setLocale(locale);
            if (accessToken) {
                request.setAccessToken(accessToken);
            }
            if (refreshToken) {
                request.setRefreshToken(refreshToken);
            }
            _this.client.launch(request, function (error, response) {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(response);
                }
            });
        });
    };
    EpsGrpcClient.prototype.extract = function (_a) {
        var _this = this;
        var connectorClass = _a.connectorClass, connectionId = _a.connectionId, callerId = _a.callerId, pluginPath = _a.pluginPath, connectionData = _a.connectionData, epsInstanceId = _a.epsInstanceId, language = _a.language, locale = _a.locale, accessToken = _a.accessToken, refreshToken = _a.refreshToken;
        return new Promise(function (resolve, reject) {
            var request = new eps_pb_1.ExtractRequest();
            var connData = JSON.stringify(connectionData);
            request.setConnectionId(connectionId);
            request.setCallerId(callerId);
            request.setConnectorClass(connectorClass);
            request.setPluginPath(pluginPath);
            request.setConnectionData(connData);
            request.setEpsInstanceId(epsInstanceId);
            request.setLanguage(language);
            request.setLocale(locale);
            if (accessToken) {
                request.setAccessToken(accessToken);
            }
            if (refreshToken) {
                request.setRefreshToken(refreshToken);
            }
            _this.client.extract(request, function (error, response) {
                if (error) {
                    console.log(error);
                    reject(error);
                }
                else {
                    resolve(response);
                }
            });
        });
    };
    EpsGrpcClient.prototype.terminateExtractor = function (_a) {
        var _this = this;
        var connectionId = _a.connectionId, extractorIds = _a.extractorIds;
        return new Promise(function (resolve, reject) {
            var request = new eps_pb_1.TerminateExtractorRequest();
            request.setConnectionId(connectionId);
            request.setExtractorIdList(extractorIds);
            _this.client.terminateExtractor(request, function (error, response) {
                if (error) {
                    console.log('terminateExtractor error :>> ', error);
                    reject(error);
                }
                else {
                    resolve(response);
                }
            });
        });
    };
    return EpsGrpcClient;
}());
exports.EpsGrpcClient = EpsGrpcClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXBzLWdycGMtY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2Vwcy9tYWluL2FwaS9ncnBjL2NsaWVudC9lcHMtZ3JwYy1jbGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUNBQTJDO0FBQzNDLDBEQUFzRDtBQUN0RCxnREFROEI7QUFFOUIsdUNBQXVDO0FBQ3ZDLFNBQWdCLG1CQUFtQixDQUFDLFFBQXlCO0lBQzNELE9BQU8sSUFBSSx1QkFBUyxDQUFDLG9CQUFhLFFBQVEsQ0FBRSxFQUFFLHFCQUFXLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQTtBQUM3RSxDQUFDO0FBRkQsa0RBRUM7QUFFRDtJQUdFLHVCQUFZLFFBQXlCO1FBQ25DLElBQUksQ0FBQyxNQUFNLEdBQUcsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUE7SUFDN0MsQ0FBQztJQUVELGlDQUFTLEdBQVQsVUFBVSxFQVVUO1FBVkQsaUJBMEJDO1lBekJDLGNBQWMsb0JBQUEsRUFDZCxZQUFZLGtCQUFBLEVBQ1osVUFBVSxnQkFBQSxFQUNWLFVBQVUsZ0JBQUE7UUFPVixPQUFPLElBQUksT0FBTyxDQUFTLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDekMsSUFBTSxPQUFPLEdBQUcsSUFBSSxzQkFBYSxFQUFFLENBQUE7WUFDbkMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUNyQyxPQUFPLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1lBQ2pDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxjQUFjLENBQUMsQ0FBQTtZQUN6QyxPQUFPLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1lBRWpDLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxVQUFDLEtBQWMsRUFBRSxRQUF3QjtnQkFDdEUsSUFBSSxLQUFLLEVBQUU7b0JBQ1QsTUFBTSxDQUFDLEtBQUssQ0FB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