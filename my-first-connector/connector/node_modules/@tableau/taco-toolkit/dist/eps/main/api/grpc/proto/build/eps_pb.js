// source: eps.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = function () {
  if (this) {
    return this
  }
  if (typeof window !== 'undefined') {
    return window
  }
  if (typeof global !== 'undefined') {
    return global
  }
  if (typeof self !== 'undefined') {
    return self
  }
  return Function('return this')()
}.call(null)

goog.exportSymbol('proto.tableau.eps.v1.AppUrlRequest', null, global)
goog.exportSymbol('proto.tableau.eps.v1.AppUrlResponse', null, global)
goog.exportSymbol('proto.tableau.eps.v1.ExtractRequest', null, global)
goog.exportSymbol('proto.tableau.eps.v1.ExtractResponse', null, global)
goog.exportSymbol('proto.tableau.eps.v1.LaunchRequest', null, global)
goog.exportSymbol('proto.tableau.eps.v1.LaunchRequest.Size', null, global)
goog.exportSymbol('proto.tableau.eps.v1.TerminateExtractorRequest', null, global)
goog.exportSymbol('proto.tableau.eps.v1.TerminateExtractorResponse', null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.LaunchRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.tableau.eps.v1.LaunchRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.LaunchRequest.displayName = 'proto.tableau.eps.v1.LaunchRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.LaunchRequest.Size = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.tableau.eps.v1.LaunchRequest.Size, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.LaunchRequest.Size.displayName = 'proto.tableau.eps.v1.LaunchRequest.Size'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.ExtractRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.tableau.eps.v1.ExtractRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.ExtractRequest.displayName = 'proto.tableau.eps.v1.ExtractRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.ExtractResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.tableau.eps.v1.ExtractResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.ExtractResponse.displayName = 'proto.tableau.eps.v1.ExtractResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.AppUrlRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.tableau.eps.v1.AppUrlRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.AppUrlRequest.displayName = 'proto.tableau.eps.v1.AppUrlRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.AppUrlResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.tableau.eps.v1.AppUrlResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.AppUrlResponse.displayName = 'proto.tableau.eps.v1.AppUrlResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.TerminateExtractorRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tableau.eps.v1.TerminateExtractorRequest.repeatedFields_, null)
}
goog.inherits(proto.tableau.eps.v1.TerminateExtractorRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.TerminateExtractorRequest.displayName = 'proto.tableau.eps.v1.TerminateExtractorRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tableau.eps.v1.TerminateExtractorResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tableau.eps.v1.TerminateExtractorResponse.repeatedFields_, null)
}
goog.inherits(proto.tableau.eps.v1.TerminateExtractorResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tableau.eps.v1.TerminateExtractorResponse.displayName = 'proto.tableau.eps.v1.TerminateExtractorResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.LaunchRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.LaunchRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.LaunchRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.LaunchRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        connectorClass: jspb.Message.getFieldWithDefault(msg, 1, ''),
        callerId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        epsInstanceId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        connectionId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        pluginPath: jspb.Message.getFieldWithDefault(msg, 5, ''),
        debug: jspb.Message.getFieldWithDefault(msg, 6, ''),
        size: (f = msg.getSize()) && proto.tableau.eps.v1.LaunchRequest.Size.toObject(includeInstance, f),
        extractorMode: jspb.Message.getFieldWithDefault(msg, 8, ''),
        connectionData: jspb.Message.getFieldWithDefault(msg, 9, ''),
        secrets: jspb.Message.getFieldWithDefault(msg, 10, ''),
        language: jspb.Message.getFieldWithDefault(msg, 11, ''),
        locale: jspb.Message.getFieldWithDefault(msg, 12, ''),
        accessToken: jspb.Message.getFieldWithDefault(msg, 13, ''),
        refreshToken: jspb.Message.getFieldWithDefault(msg, 14, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.LaunchRequest}
 */
proto.tableau.eps.v1.LaunchRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.LaunchRequest()
  return proto.tableau.eps.v1.LaunchRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.LaunchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.LaunchRequest}
 */
proto.tableau.eps.v1.LaunchRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectorClass(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setCallerId(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setEpsInstanceId(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionId(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setPluginPath(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setDebug(value)
        break
      case 7:
        var value = new proto.tableau.eps.v1.LaunchRequest.Size()
        reader.readMessage(value, proto.tableau.eps.v1.LaunchRequest.Size.deserializeBinaryFromReader)
        msg.setSize(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setExtractorMode(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionData(value)
        break
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setSecrets(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setLanguage(value)
        break
      case 12:
        var value = /** @type {string} */ (reader.readString())
        msg.setLocale(value)
        break
      case 13:
        var value = /** @type {string} */ (reader.readString())
        msg.setAccessToken(value)
        break
      case 14:
        var value = /** @type {string} */ (reader.readString())
        msg.setRefreshToken(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.LaunchRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.LaunchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.LaunchRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getConnectorClass()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getCallerId()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getEpsInstanceId()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getConnectionId()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getPluginPath()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getDebug()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getSize()
  if (f != null) {
    writer.writeMessage(7, f, proto.tableau.eps.v1.LaunchRequest.Size.serializeBinaryToWriter)
  }
  f = message.getExtractorMode()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = message.getConnectionData()
  if (f.length > 0) {
    writer.writeString(9, f)
  }
  f = message.getSecrets()
  if (f.length > 0) {
    writer.writeString(10, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11))
  if (f != null) {
    writer.writeString(11, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12))
  if (f != null) {
    writer.writeString(12, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13))
  if (f != null) {
    writer.writeString(13, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14))
  if (f != null) {
    writer.writeString(14, f)
  }
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.LaunchRequest.Size.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.LaunchRequest.Size.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.LaunchRequest.Size} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.LaunchRequest.Size.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        width: jspb.Message.getFieldWithDefault(msg, 1, 0),
        left: jspb.Message.getFieldWithDefault(msg, 2, 0),
        top: jspb.Message.getFieldWithDefault(msg, 3, 0),
        height: jspb.Message.getFieldWithDefault(msg, 4, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.LaunchRequest.Size}
 */
proto.tableau.eps.v1.LaunchRequest.Size.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.LaunchRequest.Size()
  return proto.tableau.eps.v1.LaunchRequest.Size.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.LaunchRequest.Size} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.LaunchRequest.Size}
 */
proto.tableau.eps.v1.LaunchRequest.Size.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setWidth(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setLeft(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setTop(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setHeight(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.LaunchRequest.Size.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.LaunchRequest.Size} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.LaunchRequest.Size.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getWidth()
  if (f !== 0) {
    writer.writeInt32(1, f)
  }
  f = message.getLeft()
  if (f !== 0) {
    writer.writeInt32(2, f)
  }
  f = message.getTop()
  if (f !== 0) {
    writer.writeInt32(3, f)
  }
  f = message.getHeight()
  if (f !== 0) {
    writer.writeInt32(4, f)
  }
}

/**
 * optional int32 width = 1;
 * @return {number}
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.getWidth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.tableau.eps.v1.LaunchRequest.Size} returns this
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.setWidth = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional int32 left = 2;
 * @return {number}
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.getLeft = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.tableau.eps.v1.LaunchRequest.Size} returns this
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.setLeft = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

/**
 * optional int32 top = 3;
 * @return {number}
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.getTop = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0))
}

/**
 * @param {number} value
 * @return {!proto.tableau.eps.v1.LaunchRequest.Size} returns this
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.setTop = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value)
}

/**
 * optional int32 height = 4;
 * @return {number}
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.getHeight = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
}

/**
 * @param {number} value
 * @return {!proto.tableau.eps.v1.LaunchRequest.Size} returns this
 */
proto.tableau.eps.v1.LaunchRequest.Size.prototype.setHeight = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value)
}

/**
 * optional string connector_class = 1;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getConnectorClass = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setConnectorClass = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string caller_id = 2;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getCallerId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setCallerId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string eps_instance_id = 3;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getEpsInstanceId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setEpsInstanceId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string connection_id = 4;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getConnectionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setConnectionId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string plugin_path = 5;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getPluginPath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setPluginPath = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string debug = 6;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getDebug = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setDebug = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional Size size = 7;
 * @return {?proto.tableau.eps.v1.LaunchRequest.Size}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getSize = function () {
  return /** @type{?proto.tableau.eps.v1.LaunchRequest.Size} */ (
    jspb.Message.getWrapperField(this, proto.tableau.eps.v1.LaunchRequest.Size, 7)
  )
}

/**
 * @param {?proto.tableau.eps.v1.LaunchRequest.Size|undefined} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setSize = function (value) {
  return jspb.Message.setWrapperField(this, 7, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.clearSize = function () {
  return this.setSize(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.hasSize = function () {
  return jspb.Message.getField(this, 7) != null
}

/**
 * optional string extractor_mode = 8;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getExtractorMode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setExtractorMode = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

/**
 * optional string connection_data = 9;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getConnectionData = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setConnectionData = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value)
}

/**
 * optional string secrets = 10;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getSecrets = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setSecrets = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value)
}

/**
 * optional string language = 11;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getLanguage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setLanguage = function (value) {
  return jspb.Message.setField(this, 11, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.clearLanguage = function () {
  return jspb.Message.setField(this, 11, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.hasLanguage = function () {
  return jspb.Message.getField(this, 11) != null
}

/**
 * optional string locale = 12;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getLocale = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setLocale = function (value) {
  return jspb.Message.setField(this, 12, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.clearLocale = function () {
  return jspb.Message.setField(this, 12, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.hasLocale = function () {
  return jspb.Message.getField(this, 12) != null
}

/**
 * optional string access_token = 13;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getAccessToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setAccessToken = function (value) {
  return jspb.Message.setField(this, 13, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.clearAccessToken = function () {
  return jspb.Message.setField(this, 13, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.hasAccessToken = function () {
  return jspb.Message.getField(this, 13) != null
}

/**
 * optional string refresh_token = 14;
 * @return {string}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.getRefreshToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.setRefreshToken = function (value) {
  return jspb.Message.setField(this, 14, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.LaunchRequest} returns this
 */
proto.tableau.eps.v1.LaunchRequest.prototype.clearRefreshToken = function () {
  return jspb.Message.setField(this, 14, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.LaunchRequest.prototype.hasRefreshToken = function () {
  return jspb.Message.getField(this, 14) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.ExtractRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.ExtractRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.ExtractRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.ExtractRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        connectorClass: jspb.Message.getFieldWithDefault(msg, 1, ''),
        callerId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        epsInstanceId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        connectionId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        pluginPath: jspb.Message.getFieldWithDefault(msg, 5, ''),
        debug: jspb.Message.getFieldWithDefault(msg, 6, ''),
        connectionData: jspb.Message.getFieldWithDefault(msg, 7, ''),
        secrets: jspb.Message.getFieldWithDefault(msg, 8, ''),
        language: jspb.Message.getFieldWithDefault(msg, 9, ''),
        locale: jspb.Message.getFieldWithDefault(msg, 10, ''),
        accessToken: jspb.Message.getFieldWithDefault(msg, 11, ''),
        refreshToken: jspb.Message.getFieldWithDefault(msg, 12, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.ExtractRequest}
 */
proto.tableau.eps.v1.ExtractRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.ExtractRequest()
  return proto.tableau.eps.v1.ExtractRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.ExtractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.ExtractRequest}
 */
proto.tableau.eps.v1.ExtractRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectorClass(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setCallerId(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setEpsInstanceId(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionId(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setPluginPath(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setDebug(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionData(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setSecrets(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setLanguage(value)
        break
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setLocale(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setAccessToken(value)
        break
      case 12:
        var value = /** @type {string} */ (reader.readString())
        msg.setRefreshToken(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.ExtractRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.ExtractRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.ExtractRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getConnectorClass()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getCallerId()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getEpsInstanceId()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getConnectionId()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getPluginPath()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getDebug()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getConnectionData()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getSecrets()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9))
  if (f != null) {
    writer.writeString(9, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10))
  if (f != null) {
    writer.writeString(10, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11))
  if (f != null) {
    writer.writeString(11, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12))
  if (f != null) {
    writer.writeString(12, f)
  }
}

/**
 * optional string connector_class = 1;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getConnectorClass = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setConnectorClass = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string caller_id = 2;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getCallerId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setCallerId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string eps_instance_id = 3;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getEpsInstanceId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setEpsInstanceId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string connection_id = 4;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getConnectionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setConnectionId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string plugin_path = 5;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getPluginPath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setPluginPath = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string debug = 6;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getDebug = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setDebug = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string connection_data = 7;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getConnectionData = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setConnectionData = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string secrets = 8;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getSecrets = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setSecrets = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

/**
 * optional string language = 9;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getLanguage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setLanguage = function (value) {
  return jspb.Message.setField(this, 9, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.clearLanguage = function () {
  return jspb.Message.setField(this, 9, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.hasLanguage = function () {
  return jspb.Message.getField(this, 9) != null
}

/**
 * optional string locale = 10;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getLocale = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setLocale = function (value) {
  return jspb.Message.setField(this, 10, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.clearLocale = function () {
  return jspb.Message.setField(this, 10, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.hasLocale = function () {
  return jspb.Message.getField(this, 10) != null
}

/**
 * optional string access_token = 11;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getAccessToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setAccessToken = function (value) {
  return jspb.Message.setField(this, 11, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.clearAccessToken = function () {
  return jspb.Message.setField(this, 11, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.hasAccessToken = function () {
  return jspb.Message.getField(this, 11) != null
}

/**
 * optional string refresh_token = 12;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.getRefreshToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.setRefreshToken = function (value) {
  return jspb.Message.setField(this, 12, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractRequest} returns this
 */
proto.tableau.eps.v1.ExtractRequest.prototype.clearRefreshToken = function () {
  return jspb.Message.setField(this, 12, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractRequest.prototype.hasRefreshToken = function () {
  return jspb.Message.getField(this, 12) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.ExtractResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.ExtractResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.ExtractResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.ExtractResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        status: jspb.Message.getFieldWithDefault(msg, 1, ''),
        port: jspb.Message.getFieldWithDefault(msg, 2, 0),
        extractorId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        extractorType: jspb.Message.getFieldWithDefault(msg, 4, ''),
        connectionData: jspb.Message.getFieldWithDefault(msg, 5, ''),
        secrets: jspb.Message.getFieldWithDefault(msg, 6, ''),
        errorMsg: jspb.Message.getFieldWithDefault(msg, 7, ''),
        tableauError: jspb.Message.getFieldWithDefault(msg, 8, ''),
        connectorName: jspb.Message.getFieldWithDefault(msg, 9, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.ExtractResponse}
 */
proto.tableau.eps.v1.ExtractResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.ExtractResponse()
  return proto.tableau.eps.v1.ExtractResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.ExtractResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.ExtractResponse}
 */
proto.tableau.eps.v1.ExtractResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setPort(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setExtractorId(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setExtractorType(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionData(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setSecrets(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setErrorMsg(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setTableauError(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectorName(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.ExtractResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.ExtractResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.ExtractResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2))
  if (f != null) {
    writer.writeInt32(2, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3))
  if (f != null) {
    writer.writeString(3, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4))
  if (f != null) {
    writer.writeString(4, f)
  }
  f = message.getConnectionData()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getSecrets()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7))
  if (f != null) {
    writer.writeString(7, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8))
  if (f != null) {
    writer.writeString(8, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9))
  if (f != null) {
    writer.writeString(9, f)
  }
}

/**
 * optional string status = 1;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setStatus = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getPort = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setPort = function (value) {
  return jspb.Message.setField(this, 2, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.clearPort = function () {
  return jspb.Message.setField(this, 2, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.hasPort = function () {
  return jspb.Message.getField(this, 2) != null
}

/**
 * optional string extractor_id = 3;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getExtractorId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setExtractorId = function (value) {
  return jspb.Message.setField(this, 3, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.clearExtractorId = function () {
  return jspb.Message.setField(this, 3, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.hasExtractorId = function () {
  return jspb.Message.getField(this, 3) != null
}

/**
 * optional string extractor_type = 4;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getExtractorType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setExtractorType = function (value) {
  return jspb.Message.setField(this, 4, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.clearExtractorType = function () {
  return jspb.Message.setField(this, 4, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.hasExtractorType = function () {
  return jspb.Message.getField(this, 4) != null
}

/**
 * optional string connection_data = 5;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getConnectionData = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setConnectionData = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string secrets = 6;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getSecrets = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setSecrets = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string error_msg = 7;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getErrorMsg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setErrorMsg = function (value) {
  return jspb.Message.setField(this, 7, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.clearErrorMsg = function () {
  return jspb.Message.setField(this, 7, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.hasErrorMsg = function () {
  return jspb.Message.getField(this, 7) != null
}

/**
 * optional string tableau_error = 8;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getTableauError = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setTableauError = function (value) {
  return jspb.Message.setField(this, 8, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.clearTableauError = function () {
  return jspb.Message.setField(this, 8, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.hasTableauError = function () {
  return jspb.Message.getField(this, 8) != null
}

/**
 * optional string connector_name = 9;
 * @return {string}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.getConnectorName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.setConnectorName = function (value) {
  return jspb.Message.setField(this, 9, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.ExtractResponse} returns this
 */
proto.tableau.eps.v1.ExtractResponse.prototype.clearConnectorName = function () {
  return jspb.Message.setField(this, 9, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.ExtractResponse.prototype.hasConnectorName = function () {
  return jspb.Message.getField(this, 9) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.AppUrlRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.AppUrlRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.AppUrlRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.AppUrlRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        connectorClass: jspb.Message.getFieldWithDefault(msg, 1, ''),
        connectionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        callerType: jspb.Message.getFieldWithDefault(msg, 3, ''),
        pluginPath: jspb.Message.getFieldWithDefault(msg, 4, ''),
        language: jspb.Message.getFieldWithDefault(msg, 5, ''),
        locale: jspb.Message.getFieldWithDefault(msg, 6, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.AppUrlRequest}
 */
proto.tableau.eps.v1.AppUrlRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.AppUrlRequest()
  return proto.tableau.eps.v1.AppUrlRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.AppUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.AppUrlRequest}
 */
proto.tableau.eps.v1.AppUrlRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectorClass(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionId(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setCallerType(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setPluginPath(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setLanguage(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setLocale(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.AppUrlRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.AppUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.AppUrlRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getConnectorClass()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getConnectionId()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getCallerType()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getPluginPath()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5))
  if (f != null) {
    writer.writeString(5, f)
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6))
  if (f != null) {
    writer.writeString(6, f)
  }
}

/**
 * optional string connector_class = 1;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.getConnectorClass = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.setConnectorClass = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string connection_id = 2;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.getConnectionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.setConnectionId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string caller_type = 3;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.getCallerType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.setCallerType = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string plugin_path = 4;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.getPluginPath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.setPluginPath = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string language = 5;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.getLanguage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.setLanguage = function (value) {
  return jspb.Message.setField(this, 5, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.clearLanguage = function () {
  return jspb.Message.setField(this, 5, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.hasLanguage = function () {
  return jspb.Message.getField(this, 5) != null
}

/**
 * optional string locale = 6;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.getLocale = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.setLocale = function (value) {
  return jspb.Message.setField(this, 6, value)
}

/**
 * Clears the field making it undefined.
 * @return {!proto.tableau.eps.v1.AppUrlRequest} returns this
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.clearLocale = function () {
  return jspb.Message.setField(this, 6, undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tableau.eps.v1.AppUrlRequest.prototype.hasLocale = function () {
  return jspb.Message.getField(this, 6) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.AppUrlResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.AppUrlResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.AppUrlResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.AppUrlResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        connectorAppUrl: jspb.Message.getFieldWithDefault(msg, 1, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.AppUrlResponse}
 */
proto.tableau.eps.v1.AppUrlResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.AppUrlResponse()
  return proto.tableau.eps.v1.AppUrlResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.AppUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.AppUrlResponse}
 */
proto.tableau.eps.v1.AppUrlResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectorAppUrl(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.AppUrlResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.AppUrlResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.AppUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.AppUrlResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getConnectorAppUrl()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
}

/**
 * optional string connector_app_url = 1;
 * @return {string}
 */
proto.tableau.eps.v1.AppUrlResponse.prototype.getConnectorAppUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.AppUrlResponse} returns this
 */
proto.tableau.eps.v1.AppUrlResponse.prototype.setConnectorAppUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tableau.eps.v1.TerminateExtractorRequest.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.TerminateExtractorRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.TerminateExtractorRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.TerminateExtractorRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.TerminateExtractorRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        connectionId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        extractorIdList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.TerminateExtractorRequest}
 */
proto.tableau.eps.v1.TerminateExtractorRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.TerminateExtractorRequest()
  return proto.tableau.eps.v1.TerminateExtractorRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.TerminateExtractorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.TerminateExtractorRequest}
 */
proto.tableau.eps.v1.TerminateExtractorRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setConnectionId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.addExtractorId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.TerminateExtractorRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.TerminateExtractorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.TerminateExtractorRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getConnectionId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getExtractorIdList()
  if (f.length > 0) {
    writer.writeRepeatedString(2, f)
  }
}

/**
 * optional string connection_id = 1;
 * @return {string}
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.getConnectionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.tableau.eps.v1.TerminateExtractorRequest} returns this
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.setConnectionId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * repeated string extractor_id = 2;
 * @return {!Array<string>}
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.getExtractorIdList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.tableau.eps.v1.TerminateExtractorRequest} returns this
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.setExtractorIdList = function (value) {
  return jspb.Message.setField(this, 2, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tableau.eps.v1.TerminateExtractorRequest} returns this
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.addExtractorId = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tableau.eps.v1.TerminateExtractorRequest} returns this
 */
proto.tableau.eps.v1.TerminateExtractorRequest.prototype.clearExtractorIdList = function () {
  return this.setExtractorIdList([])
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tableau.eps.v1.TerminateExtractorResponse.repeatedFields_ = [1]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.tableau.eps.v1.TerminateExtractorResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.tableau.eps.v1.TerminateExtractorResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.tableau.eps.v1.TerminateExtractorResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.tableau.eps.v1.TerminateExtractorResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        extractorIdList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tableau.eps.v1.TerminateExtractorResponse}
 */
proto.tableau.eps.v1.TerminateExtractorResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.tableau.eps.v1.TerminateExtractorResponse()
  return proto.tableau.eps.v1.TerminateExtractorResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tableau.eps.v1.TerminateExtractorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tableau.eps.v1.TerminateExtractorResponse}
 */
proto.tableau.eps.v1.TerminateExtractorResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.addExtractorId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tableau.eps.v1.TerminateExtractorResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.tableau.eps.v1.TerminateExtractorResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tableau.eps.v1.TerminateExtractorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tableau.eps.v1.TerminateExtractorResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getExtractorIdList()
  if (f.length > 0) {
    writer.writeRepeatedString(1, f)
  }
}

/**
 * repeated string extractor_id = 1;
 * @return {!Array<string>}
 */
proto.tableau.eps.v1.TerminateExtractorResponse.prototype.getExtractorIdList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.tableau.eps.v1.TerminateExtractorResponse} returns this
 */
proto.tableau.eps.v1.TerminateExtractorResponse.prototype.setExtractorIdList = function (value) {
  return jspb.Message.setField(this, 1, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tableau.eps.v1.TerminateExtractorResponse} returns this
 */
proto.tableau.eps.v1.TerminateExtractorResponse.prototype.addExtractorId = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tableau.eps.v1.TerminateExtractorResponse} returns this
 */
proto.tableau.eps.v1.TerminateExtractorResponse.prototype.clearExtractorIdList = function () {
  return this.setExtractorIdList([])
}

goog.object.extend(exports, proto.tableau.eps.v1)
