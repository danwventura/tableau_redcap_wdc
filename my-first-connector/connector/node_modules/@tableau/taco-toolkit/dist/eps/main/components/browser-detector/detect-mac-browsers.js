"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectBrowser = void 0;
var child_process_1 = require("child_process");
var fs_1 = __importDefault(require("fs"));
var detectBrowser = function (browserName) {
    return new Promise(function (resolve, reject) {
        var appPath = "/Applications/".concat(browserName, ".app");
        var exePath = "".concat(appPath, "/Contents/MacOS/").concat(browserName);
        var browser = {
            name: browserName,
            path: exePath,
            version: '',
        };
        if (!fs_1.default.existsSync(appPath)) {
            resolve(null);
        }
        var sp = (0, child_process_1.spawn)('/usr/libexec/PlistBuddy', [
            '-c',
            'print :CFBundleShortVersionString',
            "".concat(appPath, "/Contents/Info.plist"),
        ]);
        sp.stdout.setEncoding('utf8');
        sp.stdout.on('data', function (data) {
            browser.version = data.trim();
            resolve(browser);
        });
        sp.stderr.setEncoding('utf8');
        sp.stderr.on('data', function (data) {
            reject(data);
        });
        sp.on('close', function (_) { });
    });
};
exports.detectBrowser = detectBrowser;
function detectMacInstalledBrowsers(browserNames) {
    return __awaiter(this, void 0, void 0, function () {
        var promises, browserNames_1, browserNames_1_1, browserName, browsers, detectedBrowsers, browsers_1, browsers_1_1, browser;
        var e_1, _a, e_2, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    promises = [];
                    try {
                        for (browserNames_1 = __values(browserNames), browserNames_1_1 = browserNames_1.next(); !browserNames_1_1.done; browserNames_1_1 = browserNames_1.next()) {
                            browserName = browserNames_1_1.value;
                            promises.push((0, exports.detectBrowser)(browserName));
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (browserNames_1_1 && !browserNames_1_1.done && (_a = browserNames_1.return)) _a.call(browserNames_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    return [4 /*yield*/, Promise.allSettled(promises)];
                case 1:
                    browsers = _c.sent();
                    detectedBrowsers = [];
                    try {
                        for (browsers_1 = __values(browsers), browsers_1_1 = browsers_1.next(); !browsers_1_1.done; browsers_1_1 = browsers_1.next()) {
                            browser = browsers_1_1.value;
                            if (browser.status === 'fulfilled' && browser.value != null) {
                                detectedBrowsers.push(browser.value);
                            }
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (browsers_1_1 && !browsers_1_1.done && (_b = browsers_1.return)) _b.call(browsers_1);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    return [2 /*return*/, detectedBrowsers];
            }
        });
    });
}
exports.default = detectMacInstalledBrowsers;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0ZWN0LW1hYy1icm93c2Vycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9lcHMvbWFpbi9jb21wb25lbnRzL2Jyb3dzZXItZGV0ZWN0b3IvZGV0ZWN0LW1hYy1icm93c2Vycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtDQUFxQztBQUNyQywwQ0FBbUI7QUFHWixJQUFNLGFBQWEsR0FBRyxVQUFDLFdBQW1CO0lBQy9DLE9BQUEsSUFBSSxPQUFPLENBQXFCLFVBQUMsT0FBTyxFQUFFLE1BQU07UUFDOUMsSUFBTSxPQUFPLEdBQUcsd0JBQWlCLFdBQVcsU0FBTSxDQUFBO1FBQ2xELElBQU0sT0FBTyxHQUFHLFVBQUcsT0FBTyw2QkFBbUIsV0FBVyxDQUFFLENBQUE7UUFFMUQsSUFBTSxPQUFPLEdBQWdCO1lBQzNCLElBQUksRUFBRSxXQUFXO1lBQ2pCLElBQUksRUFBRSxPQUFPO1lBQ2IsT0FBTyxFQUFFLEVBQUU7U0FDWixDQUFBO1FBRUQsSUFBSSxDQUFDLFlBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7U0FBQztRQUU1QyxJQUFNLEVBQUUsR0FBRyxJQUFBLHFCQUFLLEVBQUMseUJBQXlCLEVBQUU7WUFDMUMsSUFBSTtZQUNKLG1DQUFtQztZQUNuQyxVQUFHLE9BQU8seUJBQXNCO1NBQ2pDLENBQUMsQ0FBQTtRQUVGLEVBQUUsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQzdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFDLElBQVk7WUFDaEMsT0FBTyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7WUFDN0IsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2xCLENBQUMsQ0FBQyxDQUFBO1FBRUYsRUFBRSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQUMsSUFBWTtZQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDZCxDQUFDLENBQUMsQ0FBQTtRQUVGLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQUMsQ0FBTSxJQUFNLENBQUMsQ0FBQyxDQUFBO0lBQ2hDLENBQUMsQ0FBQztBQTlCRixDQThCRSxDQUFBO0FBL0JTLFFBQUEsYUFBYSxpQkErQnRCO0FBRUosU0FBOEIsMEJBQTBCLENBQUMsWUFBMkI7Ozs7Ozs7b0JBQzVFLFFBQVEsR0FBa0MsRUFBRSxDQUFBOzt3QkFFbEQsS0FBMEIsaUJBQUEsU0FBQSxZQUFZLENBQUEsOEdBQUU7NEJBQTdCLFdBQVc7NEJBQ3BCLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBQSxxQkFBYSxFQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUE7eUJBQzFDOzs7Ozs7Ozs7b0JBRWdCLHFCQUFNLE9BQU8sQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUE7O29CQUE3QyxRQUFRLEdBQUcsU0FBa0M7b0JBRTdDLGdCQUFnQixHQUFrQixFQUFFLENBQUE7O3dCQUUxQyxLQUFzQixhQUFBLFNBQUEsUUFBUSxDQUFBLDBGQUFFOzRCQUFyQixPQUFPOzRCQUNoQixJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssV0FBVyxJQUFJLE9BQU8sQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO2dDQUMzRCxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFBOzZCQUNyQzt5QkFDRjs7Ozs7Ozs7O29CQUVELHNCQUFPLGdCQUFnQixFQUFBOzs7O0NBQ3hCO0FBbEJELDZDQWtCQyJ9