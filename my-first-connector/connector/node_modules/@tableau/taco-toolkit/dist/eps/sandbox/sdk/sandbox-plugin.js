"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SandboxPlugin = void 0;
var SandboxPlugin = /** @class */ (function () {
    function SandboxPlugin(sandbox) {
        this.sandbox = sandbox;
    }
    /**
     * Creates a class in the sandbox with the given methods.
     * @param methods Methods to define in sandbox
     * @param className Class to define in sandbox.
     */
    SandboxPlugin.prototype.createClass = function (methods, className) {
        var _this = this;
        var sortedMethods = methods.map(function (m) { return (__assign(__assign({}, m), { sandboxName: className + '$' + m.externalName })); });
        sortedMethods.sort(function (a, b) {
            // sort statics in front, then alphabetically
            if (a.isStatic !== b.isStatic) {
                return a.isStatic ? -1 : 1;
            }
            return a.externalName.localeCompare(b.externalName);
        });
        sortedMethods.forEach(function (m) {
            _this.sandbox.addMethod(m.sandboxName, m.functionRef, {
                promise: true,
                reference: true,
            });
        });
        var code = "\n      class ".concat(className, " {\n        ").concat(sortedMethods === null || sortedMethods === void 0 ? void 0 : sortedMethods.map(this.createMethod).join(';'), "\n      }\n    ");
        this.sandbox.executeCodeSync(code);
    };
    SandboxPlugin.prototype.createMethod = function (m) {
        return "\n\n    ".concat(m.isStatic ? 'static' : '', " async ").concat(m.externalName, "(...args) {\n      const fn = await requireAsync('").concat(m.sandboxName, "')\n      return await fn(...args)\n    }\n      ");
    };
    return SandboxPlugin;
}());
exports.SandboxPlugin = SandboxPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveC1wbHVnaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZXBzL3NhbmRib3gvc2RrL3NhbmRib3gtcGx1Z2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBWUE7SUFJRSx1QkFBWSxPQUFrQjtRQUM1QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQTtJQUN4QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNPLG1DQUFXLEdBQXJCLFVBQXNCLE9BQXFCLEVBQUUsU0FBaUI7UUFBOUQsaUJBMkJDO1FBMUJDLElBQU0sYUFBYSxHQUF3QixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUMsQ0FBQyxJQUFLLE9BQUEsdUJBQ3pELENBQUMsS0FDSixXQUFXLEVBQUUsU0FBUyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsWUFBWSxJQUM3QyxFQUg0RCxDQUc1RCxDQUFDLENBQUE7UUFFSCxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUM7WUFDdEIsNkNBQTZDO1lBQzdDLElBQUksQ0FBQyxDQUFDLFFBQVEsS0FBSyxDQUFDLENBQUMsUUFBUSxFQUFFO2dCQUM3QixPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7YUFDM0I7WUFDRCxPQUFPLENBQUMsQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQTtRQUNyRCxDQUFDLENBQUMsQ0FBQTtRQUVGLGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBQyxDQUFDO1lBQ3RCLEtBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRTtnQkFDbkQsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsU0FBUyxFQUFFLElBQUk7YUFDaEIsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFDLENBQUE7UUFFRixJQUFNLElBQUksR0FBRyx3QkFDSCxTQUFTLHlCQUNiLGFBQWEsYUFBYixhQUFhLHVCQUFiLGFBQWEsQ0FBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLG9CQUVwRCxDQUFBO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDcEMsQ0FBQztJQUVPLG9DQUFZLEdBQXBCLFVBQXFCLENBQW9CO1FBQ3ZDLE9BQU8sa0JBRUwsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLG9CQUFVLENBQUMsQ0FBQyxZQUFZLCtEQUNqQixDQUFDLENBQUMsV0FBVyxzREFHN0MsQ0FBQTtJQUNMLENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQUFuREQsSUFtREM7QUFuRHFCLHNDQUFhIn0=