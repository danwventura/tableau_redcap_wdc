"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var isolated_vm_1 = __importDefault(require("isolated-vm"));
var node_fs_1 = __importDefault(require("node:fs"));
var node_path_1 = __importDefault(require("node:path"));
var eps_logger_1 = require("../logging/eps-logger");
var sandbox_sdk_1 = require("./sdk/sandbox-sdk");
var SandboxVM = /** @class */ (function () {
    function SandboxVM(handlerInput, tempDataManager, networkAdapter, permission, memoryLimit) {
        if (memoryLimit === void 0) { memoryLimit = 512; }
        this.importedModules = new Set();
        // We allow the VM to use 512MB of memory. This is more of a guideline instead of a strict limit, it could actually use  less or 2-3 times more than this number.
        //Since the default 128 was not enough for the connector like Anaplan, we increased the limit to 512 to cover more use cases.
        // Create a new isolate limited to 512MB
        this.isolate = new isolated_vm_1.default.Isolate({ memoryLimit: memoryLimit });
        // this.isolate = new ivm.Isolate({ memoryLimit, inspector: true })
        // Create a new context within this isolate. Each context has its own copy of all the builtin
        // Objects. So for instance if one context does Object.prototype.foo = 1 this would not affect any
        // other contexts.
        this.context = this.isolate.createContextSync();
        // this.context = this.isolate.createContextSync({ inspector: true })
        // this.exposeInspector()
        // Get a Reference{} to the global object within the context.
        this.global = this.context.global;
        // This makes the global object available in the context as `global`. We use `derefInto()` here
        // because otherwise `global` would actually be a Reference{} object in the new isolate.
        this.addProperty('global');
        this.permission = permission;
        this.handlerInput = handlerInput;
        this.tempDataManager = tempDataManager;
        this.networkAdapter = networkAdapter;
        this.createNativeMethods();
        (0, sandbox_sdk_1.registerSandboxSdk)(this);
    }
    SandboxVM.prototype.createNativeMethods = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.executeCode("\n\t\t\tlet globalRefs = {}\n\n\t\t\tasync function requireAsync(name) {\n\t\t\t\tlet fnRef = await this[name];\n\t\t\t\treturn async (...args) => {\n\t\t\t\t\treturn fnRef.applySync(undefined, args, {\n\t\t\t\t\t\targuments: { copy: true },\n\t\t\t\t\t\tresult: { promise: true, copy: true }\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t")];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    SandboxVM.prototype.importModule = function (modulePath) {
        return __awaiter(this, void 0, void 0, function () {
            var absModulePath, module_1, script, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.importedModules.has(modulePath)) {
                            return [2 /*return*/];
                        }
                        this.importedModules.add(modulePath);
                        absModulePath = node_path_1.default.resolve(modulePath);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        return [4 /*yield*/, node_fs_1.default.promises.readFile(absModulePath, { encoding: 'utf-8' })];
                    case 2:
                        module_1 = _a.sent();
                        return [4 /*yield*/, this.isolate.compileScript(module_1)];
                    case 3:
                        script = _a.sent();
                        return [4 /*yield*/, script.run(this.context)];
                    case 4:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 5:
                        error_1 = _a.sent();
                        eps_logger_1.Logger.error("Error occurred during module import:\nModulePath: ".concat(absModulePath, "\nError: ").concat(error_1));
                        throw error_1;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    SandboxVM.prototype.addProperty = function (name, value, transferOptions) {
        if (value === void 0) { value = this.global.derefInto(); }
        this.global.setSync(name, value, transferOptions);
    };
    SandboxVM.prototype.getProperty = function (name) {
        return this.global.getSync(name);
    };
    SandboxVM.prototype.addMethod = function (name, fn, options) {
        if (options === void 0) { options = undefined; }
        this.global.setSync(name, fn, options);
    };
    SandboxVM.prototype.getMethod = function (name) {
        return this.global.getSync(name);
    };
    SandboxVM.prototype.getPermission = function () {
        return this.permission;
    };
    SandboxVM.prototype.getHandlerInput = function () {
        return this.handlerInput;
    };
    SandboxVM.prototype.getTempDataManager = function () {
        return this.tempDataManager;
    };
    SandboxVM.prototype.getNetworkAdapter = function () {
        return this.networkAdapter;
    };
    SandboxVM.prototype.executeCodeWithParameters = function (code, args, options) {
        return this.context.evalClosure(code, args, options);
    };
    SandboxVM.prototype.executeCode = function (code, options) {
        return this.context.eval(code, options);
    };
    SandboxVM.prototype.executeCodeSync = function (code, options) {
        return this.context.evalSync(code, options);
    };
    return SandboxVM;
}());
exports.default = SandboxVM;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveC12bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9lcHMvc2FuZGJveC9zYW5kYm94LXZtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNERBQW9FO0FBQ3BFLG9EQUF3QjtBQUN4Qix3REFBNEI7QUFJNUIsb0RBQThDO0FBRzlDLGlEQUFzRDtBQUV0RDtJQVVFLG1CQUNFLFlBQTBCLEVBQzFCLGVBQWdDLEVBQ2hDLGNBQThCLEVBQzlCLFVBQXVCLEVBQ3ZCLFdBQWlCO1FBQWpCLDRCQUFBLEVBQUEsaUJBQWlCO1FBRWpCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQTtRQUVoQyxpS0FBaUs7UUFDakssNkhBQTZIO1FBQzdILHdDQUF3QztRQUN4QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUkscUJBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxXQUFXLGFBQUEsRUFBRSxDQUFDLENBQUE7UUFDL0MsbUVBQW1FO1FBRW5FLDZGQUE2RjtRQUM3RixrR0FBa0c7UUFDbEcsa0JBQWtCO1FBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxDQUFBO1FBQy9DLHFFQUFxRTtRQUNyRSx5QkFBeUI7UUFFekIsNkRBQTZEO1FBQzdELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUE7UUFFakMsK0ZBQStGO1FBQy9GLHdGQUF3RjtRQUN4RixJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFBO1FBQzVCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFBO1FBQ2hDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFBO1FBQ3RDLElBQUksQ0FBQyxjQUFj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