"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDataRows = exports.parse = void 0;
var papaparse_1 = __importDefault(require("papaparse"));
var sandbox_plugin_1 = require("../sandbox-plugin");
var parse_utils_1 = require("../../../utils/parse-utils");
var CsvUtilsPlugin = /** @class */ (function (_super) {
    __extends(CsvUtilsPlugin, _super);
    function CsvUtilsPlugin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CsvUtilsPlugin.prototype.init = function () {
        var methods = [
            {
                isStatic: true,
                externalName: 'parse',
                functionRef: parse,
            },
            {
                isStatic: true,
                externalName: 'createDataRows',
                functionRef: createDataRows,
            },
        ];
        this.createClass(methods, 'CsvUtils');
    };
    return CsvUtilsPlugin;
}(sandbox_plugin_1.SandboxPlugin));
exports.default = CsvUtilsPlugin;
function parse(rawData, options) {
    return new Promise(function (resolve, _reject) {
        console.log('>CsvUtils.parse');
        var data;
        if (ArrayBuffer.isView(rawData)) {
            data = new TextDecoder('utf-8').decode(rawData);
        }
        else {
            data = rawData;
        }
        // TODO: figure out why don't we just use the header flag?
        var papaResult = papaparse_1.default.parse(data, { header: false });
        var rows;
        var headers;
        if (options.hasHeader) {
            headers = papaResult.data[0];
            rows = papaResult.data.slice(1);
        }
        else {
            rows = papaResult.data;
        }
        console.log("<CsvUtils.parse returning ".concat(rows.length, " rows."));
        resolve({ rows: rows, headers: headers });
    });
}
exports.parse = parse;
function createDataRows(rows, columnNames) {
    return new Promise(function (resolve, reject) {
        try {
            var dataRows = (0, parse_utils_1.composeDataRows)(rows, columnNames);
            resolve(dataRows);
        }
        catch (e) {
            e.message = "Failed to create DataRows. Caused by: ".concat(e.message);
            reject(e);
        }
    });
}
exports.createDataRows = createDataRows;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3N2LXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2Vwcy9zYW5kYm94L3Nkay9wYXJzZXItdXRpbHMvY3N2LXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHdEQUE0QjtBQUc1QixvREFBNkQ7QUFDN0QsMERBQTREO0FBRTVEO0lBQTRDLGtDQUFhO0lBQXpEOztJQWlCQSxDQUFDO0lBaEJDLDZCQUFJLEdBQUo7UUFDRSxJQUFNLE9BQU8sR0FBaUI7WUFDNUI7Z0JBQ0UsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLFdBQVcsRUFBRSxLQUFLO2FBQ25CO1lBQ0Q7Z0JBQ0UsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsWUFBWSxFQUFFLGdCQUFnQjtnQkFDOUIsV0FBVyxFQUFFLGNBQWM7YUFDNUI7U0FDRixDQUFBO1FBRUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUE7SUFDdkMsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQWpCRCxDQUE0Qyw4QkFBYSxHQWlCeEQ7O0FBRUQsU0FBZ0IsS0FBSyxDQUNuQixPQUE2QixFQUM3QixPQUErQjtJQUUvQixPQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE9BQU87UUFDbEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO1FBRTlCLElBQUksSUFBSSxDQUFBO1FBQ1IsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQy9CLElBQUksR0FBRyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUE7U0FDaEQ7YUFBTTtZQUNMLElBQUksR0FBRyxPQUFPLENBQUE7U0FDZjtRQUVELDBEQUEwRDtRQUMxRCxJQUFNLFVBQVUsR0FBRyxtQkFBSSxDQUFDLEtBQUssQ0FBVyxJQUFjLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQTtRQUUxRSxJQUFJLElBQWdCLENBQUE7UUFDcEIsSUFBSSxPQUE2QixDQUFBO1FBQ2pDLElBQUksT0FBTyxDQUFDLFNBQVMsRUFBRTtZQUNyQixPQUFPLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtZQUM1QixJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUE7U0FDaEM7YUFBTTtZQUNMLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFBO1NBQ3ZCO1FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBNkIsSUFBSSxDQUFDLE1BQU0sV0FBUSxDQUFDLENBQUE7UUFDN0QsT0FBTyxDQUFDLEVBQUUsSUFBSSxNQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUUsQ0FBQyxDQUFBO0lBQzVCLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQztBQTdCRCxzQkE2QkM7QUFFRCxTQUFnQixjQUFjLENBQUMsSUFBZ0IsRUFBRSxXQUFxQjtJQUNwRSxPQUFPLElBQUksT0FBTyxDQUFZLFVBQUMsT0FBTyxFQUFFLE1BQU07UUFDNUMsSUFBSTtZQUNGLElBQU0sUUFBUSxHQUFHLElBQUEsNkJBQWUsRUFBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUE7WUFDbkQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1NBQ2xCO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixDQUFDLENBQUMsT0FBTyxHQUFHLGdEQUF5QyxDQUFDLENBQUMsT0FBTyxDQUFFLENBQUE7WUFDaEUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQ1Y7SUFDSCxDQUFDLENBQUMsQ0FBQTtBQUNKLENBQUM7QUFWRCx3Q0FVQyJ9