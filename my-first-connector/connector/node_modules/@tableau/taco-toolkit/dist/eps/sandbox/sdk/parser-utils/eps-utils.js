"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.delay = void 0;
var sandbox_plugin_1 = require("../sandbox-plugin");
//This class will be used to inject some node modules that don't work in the sandbox
//This funationality will be for intenal use at this moment and won't be exposed in the SKD
var EpsUtilsPlugin = /** @class */ (function (_super) {
    __extends(EpsUtilsPlugin, _super);
    function EpsUtilsPlugin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EpsUtilsPlugin.prototype.init = function () {
        var methods = [
            {
                isStatic: true,
                externalName: 'delay',
                functionRef: delay,
            },
        ];
        this.createClass(methods, 'EpsUtils');
    };
    return EpsUtilsPlugin;
}(sandbox_plugin_1.SandboxPlugin));
exports.default = EpsUtilsPlugin;
function delay(timeMs) {
    return new Promise(function (resolve) {
        return setTimeout(function () {
            console.log('>EpsUtils.delay');
            resolve(true);
        }, timeMs);
    });
}
exports.delay = delay;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXBzLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2Vwcy9zYW5kYm94L3Nkay9wYXJzZXItdXRpbHMvZXBzLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9EQUE2RDtBQUU3RCxvRkFBb0Y7QUFDcEYsMkZBQTJGO0FBQzNGO0lBQTRDLGtDQUFhO0lBQXpEOztJQVlBLENBQUM7SUFYQyw2QkFBSSxHQUFKO1FBQ0UsSUFBTSxPQUFPLEdBQWlCO1lBQzVCO2dCQUNFLFFBQVEsRUFBRSxJQUFJO2dCQUNkLFlBQVksRUFBRSxPQUFPO2dCQUNyQixXQUFXLEVBQUUsS0FBSzthQUNuQjtTQUNGLENBQUE7UUFFRCxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQTtJQUN2QyxDQUFDO0lBQ0gscUJBQUM7QUFBRCxDQUFDLEFBWkQsQ0FBNEMsOEJBQWEsR0FZeEQ7O0FBRUQsU0FBZ0IsS0FBSyxDQUFDLE1BQWM7SUFDbEMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU87UUFDekIsT0FBQSxVQUFVLENBQUM7WUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUE7WUFDOUIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ2YsQ0FBQyxFQUFFLE1BQU0sQ0FBQztJQUhWLENBR1UsQ0FDWCxDQUFBO0FBQ0gsQ0FBQztBQVBELHNCQU9DIn0=