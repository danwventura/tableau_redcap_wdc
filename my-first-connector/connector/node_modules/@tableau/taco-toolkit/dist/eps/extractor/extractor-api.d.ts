import { ColumnHeader } from '../../shared/types/column-header';
import { DataRow } from '../../shared/types/data-row';
import { ExtractorHealth } from './extractor-health';
import PipelineManager from './pipeline-manager';
import { TacoFileParser } from './handlers/taco-parser/base-taco-file-parser';
import { DataContainer } from '../../shared/types/data-container';
export default class ExtractorApi {
    private app;
    private callerId;
    private epsInstanceId;
    private extractorId;
    private connectionId;
    private readonly runDeferredPipelineMaybe;
    constructor(callerId: string, epsInstanceId: string, extractorId: string, connectionId: string, health: ExtractorHealth, pipelineManager: PipelineManager);
    interceptRequests(health: ExtractorHealth): void;
    private createRunDeferredPipelineMaybe;
    private getTable;
    getRowsFromFile(tableName: string, reset: boolean, count: number): Promise<DataRow[] | undefined>;
    getRowsFromExtractorCache(tableName: string): DataRow[] | undefined;
    createGetTables(): void;
    /**
      /tables/<name>/metadata?sort=original returns the original order of the columns from the source.
      /tables/<name>/metadata sorts column by id to work with a monolith dependency on sorted columns.
    */
    createGetMetadata(): void;
    createGetRows(): void;
    createHasMoreRows(): void;
    createGetRowCount(): void;
    /** Starts extractor HTTP server */
    start(port: number): Promise<void>;
}
/**
 * Compose table name list based on dataContainer (cache) and fileParserMap in the ExtractorContext
 */
export declare function getTableNames(dataContainer: DataContainer | undefined, fileParserMap: Record<string, TacoFileParser>): string[];
/**
 * Sort the given column header array into unicode order. The sorted result is
 * the columns order that extractor API responses (when 'original' param is not present).
 * Tableau monolith expects EPS to send the column header in a particular order.
 * Based on the observation, sorting by unicode order works properly.
 *
 * Note the function mutates the original input array.
 */
export declare function sortColumnHeaderList(columns: ColumnHeader[]): void;
