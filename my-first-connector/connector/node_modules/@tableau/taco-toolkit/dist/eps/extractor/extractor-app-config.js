"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExtractorAppConfig = void 0;
var app_config_utils_1 = require("../utils/app-config-utils");
var appConfig;
/**
 * Compose Extractor app config from process args and environment variables.
 *
 * Wrap the logic into a function to trigger the value parsing on demand.
 */
function getExtractorAppConfig() {
    if (appConfig) {
        return appConfig;
    }
    /**** options from process arguments ****/
    var _a = __read(process.argv, 5), extractorId = _a[2], extractorOptions = _a[3], portConfig = _a[4];
    /**** options from environment variables ****/
    // EPS child app env configs
    var epsInstanceId = (0, app_config_utils_1.getRequiredEnvVariable)('EPS_INSTANCE_ID');
    var callerId = (0, app_config_utils_1.getRequiredEnvVariable)('EPS_CALLER_ID');
    var epsTempDirPath = (0, app_config_utils_1.getRequiredEnvVariable)('EPS_TEMP_DIR_PATH');
    var logOption = (0, app_config_utils_1.getRequiredEnvVariable)('EPS_APP_LOG_CONFIG');
    var networkOption = (0, app_config_utils_1.getRequiredEnvVariable)('EPS_NETWORK_CONFIG');
    appConfig = {
        epsInstanceId: epsInstanceId,
        callerId: callerId,
        extractorId: extractorId,
        epsTempDirPath: epsTempDirPath,
        networkAdapterOptions: JSON.parse(networkOption),
        extractorOptions: JSON.parse(extractorOptions),
        portConfig: JSON.parse(portConfig),
        logOption: (0, app_config_utils_1.parseAppLogOption)(logOption),
    };
    return appConfig;
}
exports.getExtractorAppConfig = getExtractorAppConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdG9yLWFwcC1jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXBzL2V4dHJhY3Rvci9leHRyYWN0b3ItYXBwLWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0EsOERBQXFGO0FBYXJGLElBQUksU0FBeUMsQ0FBQTtBQUU3Qzs7OztHQUlHO0FBQ0gsU0FBZ0IscUJBQXFCO0lBQ25DLElBQUksU0FBUyxFQUFFO1FBQ2IsT0FBTyxTQUFTLENBQUE7S0FDakI7SUFFRCwwQ0FBMEM7SUFDcEMsSUFBQSxLQUFBLE9BQWtELE9BQU8sQ0FBQyxJQUFJLElBQUEsRUFBekQsV0FBVyxRQUFBLEVBQUUsZ0JBQWdCLFFBQUEsRUFBRSxVQUFVLFFBQWdCLENBQUE7SUFFcEUsOENBQThDO0lBRTlDLDRCQUE0QjtJQUM1QixJQUFNLGFBQWEsR0FBRyxJQUFBLHlDQUFzQixFQUFDLGlCQUFpQixDQUFDLENBQUE7SUFDL0QsSUFBTSxRQUFRLEdBQUcsSUFBQSx5Q0FBc0IsRUFBQyxlQUFlLENBQUMsQ0FBQTtJQUN4RCxJQUFNLGNBQWMsR0FBRyxJQUFBLHlDQUFzQixFQUFDLG1CQUFtQixDQUFDLENBQUE7SUFDbEUsSUFBTSxTQUFTLEdBQUcsSUFBQSx5Q0FBc0IsRUFBQyxvQkFBb0IsQ0FBQyxDQUFBO0lBQzlELElBQU0sYUFBYSxHQUFHLElBQUEseUNBQXNCLEVBQUMsb0JBQW9CLENBQUMsQ0FBQTtJQUVsRSxTQUFTLEdBQUc7UUFDVixhQUFhLGVBQUE7UUFDYixRQUFRLFVBQUE7UUFDUixXQUFXLGFBQUE7UUFDWCxjQUFjLGdCQUFBO1FBQ2QscUJBQXFCLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUM7UUFDaEQsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztRQUM5QyxVQUFVLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7UUFDbEMsU0FBUyxFQUFFLElBQUEsb0NBQWlCLEVBQUMsU0FBUyxDQUFDO0tBQ3hDLENBQUE7SUFFRCxPQUFPLFNBQVMsQ0FBQTtBQUNsQixDQUFDO0FBN0JELHNEQTZCQyJ9