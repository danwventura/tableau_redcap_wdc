"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFileBasedCodeText = void 0;
function getFileBasedCodeText(fetcherClassName) {
    // If mode: large-data and has a built-in-parser than skip running the parser step
    // in the sandbox pipeline
    return "\n        const fetcher = new globalRefs[\"".concat(fetcherClassName, "\"]();\n        const handlerInput = $0.copySync();\n        const context = $1.copySync();\n\n        if (!context.connector) {\n          log('context.connector is not set.');\n        }\n\n        return (async () => {\n          try {\n            const { authResult, connector: { secrets }, phase } = context;\n\n            if (phase !== \"SchemaGathering\" && phase !== \"DataGathering\") {\n              throw new Error('The phase \"' + phase + '\" is not a valid GatheringPhase.');\n            }\n\n            const fetchIter = fetcher.fetch({ authResult, handlerInput, secrets });\n            if (typeof fetchIter?.next !== 'function') {\n              throw new Error(\"").concat(fetcherClassName, ".fetch is not a generator function.\");\n            }\n\n            while (true) {\n              let fetchResult;\n              try {\n                fetchResult = await fetchIter.next();\n              } catch (error) {\n                error.message = '").concat(fetcherClassName, ".fetch failed. ' + error.message;\n                throw error;\n              }\n\n              const { value, done } = fetchResult;\n              if (done) {\n                break;\n              }\n            }\n          }\n          catch (error) {\n            error.message = 'Failure in sandbox pipeline. ' + error.message;\n            throw error;\n          }\n        })();\n        ");
}
exports.getFileBasedCodeText = getFileBasedCodeText;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1iYXNlZC1jb2RlLXRleHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXBzL2V4dHJhY3Rvci9maWxlLWJhc2VkLWNvZGUtdGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxTQUFnQixvQkFBb0IsQ0FBQyxnQkFBd0I7SUFDM0Qsa0ZBQWtGO0lBQ2xGLDBCQUEwQjtJQUMxQixPQUFPLHFEQUNpQyxnQkFBZ0IsMHJCQWtCekIsZ0JBQWdCLGlSQVFkLGdCQUFnQixvWkFlMUMsQ0FBQTtBQUNULENBQUM7QUE5Q0Qsb0RBOENDIn0=