"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var connector_phase_1 = require("../../shared/enums/connector-phase");
var taco_file_parser_1 = require("../../shared/enums/taco-file-parser");
var eps_logger_1 = require("../logging/eps-logger");
var sandbox_vm_1 = __importDefault(require("../sandbox/sandbox-vm"));
var file_based_code_text_1 = require("./file-based-code-text");
var handler_resolver_1 = require("./handler-resolver");
var memory_store_1 = require("./handlers/store/memory-store");
var in_memory_code_text_1 = require("./in-memory-code-text");
var SandboxPipeline = /** @class */ (function () {
    function SandboxPipeline(extractorContext, handlerInput, tempDataManager, networkAdapter) {
        this.extractorContext = extractorContext;
        this.handlerInput = handlerInput;
        this.handlers = (0, handler_resolver_1.resolveHandlers)(extractorContext.handlersDir, handlerInput);
        this.sandboxVM = new sandbox_vm_1.default(this.handlerInput, tempDataManager, networkAdapter, extractorContext.connector.permission); // this will automatically add the sdk
        this.storage = new memory_store_1.MemoryStore();
    }
    SandboxPipeline.prototype.runPipelineForFileBasedData = function (context, fetcherClassName) {
        return __awaiter(this, void 0, void 0, function () {
            var codeText;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        codeText = (0, file_based_code_text_1.getFileBasedCodeText)(fetcherClassName);
                        return [4 /*yield*/, this.executePipelineCode(codeText, [this.handlerInput, context])
                            // Adding context into ExtractorCache
                        ];
                    case 1:
                        _a.sent();
                        // Adding context into ExtractorCache
                        return [4 /*yield*/, this.storage.run(this.handlerInput, context)];
                    case 2:
                        // Adding context into ExtractorCache
                        _a.sent();
                        eps_logger_1.Logger.info("Returned from pipeline after data ingestion.");
                        return [2 /*return*/];
                }
            });
        });
    };
    SandboxPipeline.prototype.runPipelineForInMemoryData = function (context, fetcherClassName, parserClassName) {
        return __awaiter(this, void 0, void 0, function () {
            var codeText, container, freshTables;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        codeText = (0, in_memory_code_text_1.getInMemoryCodeText)(fetcherClassName, parserClassName);
                        return [4 /*yield*/, this.executePipelineCode(codeText, [this.handlerInput, context])];
                    case 1:
                        container = _a.sent();
                        eps_logger_1.Logger.info("Returned from pipeline with ".concat(container === null || container === void 0 ? void 0 : container.tables.length, " tables"));
                        if (context.container === undefined) {
                            context.container = container;
                        }
                        else {
                            freshTables = container.tables;
                            freshTables.forEach(function (freshTable) {
                                var replaceInd = context.container.tables.findIndex(function (prevTable) { return prevTable.name === freshTable.name; });
                                if (replaceInd !== -1) {
                                    var existingTable = context.container.tables[replaceInd];
                                    context.container.tables[replaceInd] = freshTable;
                                    if (freshTable.columns.length === 0 && existingTable.columns.length > 0) {
                                        context.container.tables[replaceInd].columns = existingTable.columns;
                                    }
                                }
                                else {
                                    context.container.tables.push(freshTable);
                                }
                            });
                        }
                        // Update extractor cache
                        return [4 /*yield*/, this.storage.run(this.handlerInput, context)];
                    case 2:
                        // Update extractor cache
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // TODO: context param is already available on 'this'
    SandboxPipeline.prototype.runDataGatheringPhase = function (context) {
        return __awaiter(this, void 0, void 0, function () {
            var fetcherClassName, parser, parserClassName;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // Initialize extractor cache
                    return [4 /*yield*/, this.storage.run(this.handlerInput, context)];
                    case 1:
                        // Initialize extractor cache
                        _a.sent();
                        fetcherClassName = this.handlers.fetcher.className;
                        parser = this.handlers.parser;
                        if (!(0, handler_resolver_1.isHandlerConfig)(parser)) return [3 /*break*/, 3];
                        parserClassName = parser.className;
                        return [4 /*yield*/, this.runPipelineForInMemoryData(context, fetcherClassName, parserClassName)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3:
                        if (!(0, taco_file_parser_1.isTacoFileParserName)(parser)) return [3 /*break*/, 5];
                        // file-based support, uses built-in parser
                        return [4 /*yield*/, this.runPipelineForFileBasedData(context, fetcherClassName)];
                    case 4:
                        // file-based support, uses built-in parser
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 5: throw new Error("Invalid parser: ".concat(parser));
                    case 6:
                        // If an auth exception is thrown, we can try to re-auth if previously skipped or something?
                        eps_logger_1.Logger.info('Done with runDataGatheringPhase...');
                        return [2 /*return*/];
                }
            });
        });
    };
    SandboxPipeline.prototype.runAuthPhase = function (authClassName, context) {
        return __awaiter(this, void 0, void 0, function () {
            var authCode, authOptions, authResult;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        authCode = "\n      let auth = new globalRefs[\"".concat(authClassName, "\"]()\n      return auth.run($0.copySync());\n    ");
                        authOptions = {
                            handlerInput: this.handlerInput,
                            secrets: context.connector.secrets,
                        };
                        return [4 /*yield*/, this.executePipelineCode(authCode, [authOptions])];
                    case 1:
                        authResult = _a.sent();
                        context.authResult = authResult;
                        return [2 /*return*/];
                }
            });
        });
    };
    SandboxPipeline.prototype.executePipelineCode = function (code, params) {
        return this.sandboxVM.executeCodeWithParameters(code, params, {
            arguments: {
                reference: true,
            },
            result: {
                promise: true,
                copy: true,
            },
        });
    };
    SandboxPipeline.prototype.runPhase = function (phase) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, authClassName;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        eps_logger_1.Logger.info("Phase: ".concat(phase));
                        this.extractorContext.phase = phase;
                        return [4 /*yield*/, this.loadHandlers(this.handlers)];
                    case 1:
                        _b.sent();
                        _a = phase;
                        switch (_a) {
                            case connector_phase_1.ConnectorPhase.Auth: return [3 /*break*/, 2];
                            case connector_phase_1.ConnectorPhase.DataGathering: return [3 /*break*/, 5];
                            case connector_phase_1.ConnectorPhase.SchemaGathering: return [3 /*break*/, 5];
                        }
                        return [3 /*break*/, 7];
                    case 2:
                        if (!this.handlers.auth) return [3 /*break*/, 4];
                        authClassName = this.handlers.auth.className;
                        return [4 /*yield*/, this.runAuthPhase(authClassName, this.extractorContext)];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4: return [3 /*break*/, 7];
                    case 5: return [4 /*yield*/, this.runDataGatheringPhase(this.extractorContext)];
                    case 6:
                        _b.sent();
                        return [3 /*break*/, 7];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    SandboxPipeline.prototype.loadHandlers = function (handlers) {
        return __awaiter(this, void 0, void 0, function () {
            var auth, fetcher, parser;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        auth = handlers.auth, fetcher = handlers.fetcher, parser = handlers.parser;
                        if (!auth) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.sandboxVM.importModule(auth.path)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [4 /*yield*/, this.sandboxVM.importModule(fetcher.path)];
                    case 3:
                        _a.sent();
                        if (!(0, handler_resolver_1.isHandlerConfig)(parser)) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.sandboxVM.importModule(parser.path)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    return SandboxPipeline;
}());
exports.default = SandboxPipeline;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveC1waXBlbGluZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9lcHMvZXh0cmFjdG9yL3NhbmRib3gtcGlwZWxpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRUFBbUU7QUFDbkUsd0VBQTBFO0FBSzFFLG9EQUE4QztBQUM5QyxxRUFBNkM7QUFHN0MsK0RBQTZEO0FBQzdELHVEQUFvRjtBQUdwRiw4REFBMkQ7QUFDM0QsNkRBQTJEO0FBRTNEO0lBU0UseUJBQ0UsZ0JBQWtDLEVBQ2xDLFlBQTBCLEVBQzFCLGVBQWdDLEVBQ2hDLGNBQThCO1FBRTlCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQTtRQUN4QyxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQTtRQUNoQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUEsa0NBQWUsRUFBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUE7UUFDM0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLG9CQUFTLENBQzVCLElBQUksQ0FBQyxZQUFZLEVBQ2pCLGVBQWUsRUFDZixjQUFjLEVBQ2QsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FDdEMsQ0FBQSxDQUFDLHNDQUFzQztRQUN4QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksMEJBQVcsRUFBRSxDQUFBO0lBQ2xDLENBQUM7SUFFYSxxREFBMkIsR0FBekMsVUFBMEMsT0FBeUIsRUFBRSxnQkFBd0I7Ozs7Ozt3QkFDckYsUUFBUSxHQUFHLElBQUEsMkNBQW9CLEVBQUMsZ0JBQWdCLENBQUMsQ0FBQTt3QkFDdkQscUJBQU0sSUFBSSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQUM7NEJBRXRFLHFDQUFxQzswQkFGaUM7O3dC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