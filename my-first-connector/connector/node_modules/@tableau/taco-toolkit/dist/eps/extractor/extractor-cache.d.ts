import ExtractorContext from './extractor-context';
import { DataContainer } from '../../shared/types/data-container';
import { DataTable } from '../../shared/types/data-table';
import { TacoFileParser } from './handlers/taco-parser/base-taco-file-parser';
declare class ExtractorCache {
    cache: DataContainer;
    context: ExtractorContext;
    /**
     * tableName -> FileParser
     */
    fileParserMap: Record<string, TacoFileParser>;
}
declare const extractorCache: ExtractorCache;
export default extractorCache;
/**
 * merge the tables into ExtracorCache (ExtracorCache.cache, ExtracorCache.context.container)
 * currently, it's done by MemoryStore.run() for in-memory based
 * @param tables
 */
export declare function mergeTablesIntoExtractorCache(tables: DataTable[]): void;
/**
 * Update ExtracorCache.cache (DataContainer) with the DataContainer insde ExtracorCache.context.container
 * and ExtracorCache.context with above context
 * @param context
 */
export declare function updateExtractorCacheFromExtractorContext(context: ExtractorContext): void;
export declare function addTacoFileParserIntoCache(tableName: string, tacoFileParser: TacoFileParser): void;
