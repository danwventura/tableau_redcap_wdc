"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var connector_phase_1 = require("../../shared/enums/connector-phase");
var error_codes_1 = require("../../shared/errors/error-codes");
var error_source_1 = require("../../shared/errors/error-source");
var status_code_1 = require("../../shared/errors/status-code");
var extractor_status_1 = require("../types/extractor-status");
var eps_logger_1 = require("../logging/eps-logger");
var network_adapter_1 = require("../modules/network-adapter");
var temp_data_manager_1 = require("../modules/temp-data-manager");
var server_utils_1 = require("../utils/server-utils");
var extractor_api_1 = __importDefault(require("./extractor-api"));
var extractor_context_1 = __importDefault(require("./extractor-context"));
var extractor_message_1 = require("./extractor-message");
var pipeline_manager_1 = __importDefault(require("./pipeline-manager"));
var Extractor = /** @class */ (function () {
    function Extractor(extractorId, options, epsInstanceId, callerId, epsTempDirPath, networkAdapterOptions) {
        this.options = options;
        this.cache = null;
        this.extractorId = extractorId;
        this.context = new extractor_context_1.default(extractorId, options, { epsInstanceId: epsInstanceId, epsTempDirPath: epsTempDirPath });
        this.tempDataManager = new temp_data_manager_1.TempDataManager(epsInstanceId, epsTempDirPath);
        this.networkAdapter = new network_adapter_1.NetworkAdapter(networkAdapterOptions);
        this.pipelineManager = new pipeline_manager_1.default(this.context, this.tempDataManager, this.networkAdapter);
        this.extractorApi = new extractor_api_1.default(callerId, epsInstanceId, extractorId, options.connectionId, this.context.health, this.pipelineManager);
    }
    Extractor.prototype.makeTableNamesUnique = function () {
        var e_1, _a;
        var _b;
        var tableNameSet = new Set();
        var tables = (_b = this.context.container) === null || _b === void 0 ? void 0 : _b.tables;
        if (tables) {
            try {
                for (var tables_1 = __values(tables), tables_1_1 = tables_1.next(); !tables_1_1.done; tables_1_1 = tables_1.next()) {
                    var t = tables_1_1.value;
                    var tableNameVersion = 1;
                    var candidate = t.name;
                    while (tableNameSet.has(candidate)) {
                        tableNameVersion++;
                        candidate = "".concat(t.name, " (").concat(tableNameVersion, ")");
                    }
                    if (t.name != candidate) {
                        t.name = candidate;
                    }
                    tableNameSet.add(t.name);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (tables_1_1 && !tables_1_1.done && (_a = tables_1.return)) _a.call(tables_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    Extractor.prototype.start = function (portManager) {
        return __awaiter(this, void 0, void 0, function () {
            var port, errorMessage, status, handlerInputs, e_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        eps_logger_1.Logger.info({
                            title: 'Extractor run() begins',
                            connectionId: this.context.connectionId,
                            handlerInputs: this.context.handlerInputs,
                        });
                        return [4 /*yield*/, (0, server_utils_1.startServerWithRetry)(this.extractorApi.start.bind(this.extractorApi), portManager)];
                    case 1:
                        port = _a.sent();
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 8, , 9]);
                        if (!(this.context.health.errorMessage === undefined)) return [3 /*break*/, 6];
                        handlerInputs = this.context.handlerInputs;
                        this.pipelineManager.addInitialPipelines(handlerInputs);
                        return [4 /*yield*/, this.pipelineManager.runPhaseOnInitialPipelines(connector_phase_1.ConnectorPhase.Auth)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.pipelineManager.runPhaseOnInitialPipelines(connector_phase_1.ConnectorPhase.SchemaGathering)];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this.pipelineManager.processFileBasedParser(handlerInputs)];
                    case 5:
                        _a.sent();
                        this.makeTableNamesUnique();
                        status = extractor_status_1.ExtractorStatus.SchemaDone;
                        return [3 /*break*/, 7];
                    case 6:
                        // TODO: Would like this to be an error status, but it will affect monolith.
                        status = extractor_status_1.ExtractorStatus.SchemaDone; //ExtractorUnhealthy needed to parse port, etc.
                        _a.label = 7;
                    case 7: return [3 /*break*/, 9];
                    case 8:
                        e_2 = _a.sent();
                        eps_logger_1.Logger.logEPSError(status_code_1.StatusCode.Unhealthy, error_source_1.ErrorSources.Client, error_codes_1.ErrorCodes.P6WNIRTU, e_2);
                        status = extractor_status_1.ExtractorStatus.SchemaDone; //ExtractorUnhealthy
                        errorMessage = e_2.message;
                        this.context.health.errorMessage = errorMessage;
                        return [3 /*break*/, 9];
                    case 9:
                        (0, extractor_message_1.sendExtractorMessage)({
                            port: port,
                            status: status,
                            extractorId: this.extractorId,
                            errorMessage: errorMessage,
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    return Extractor;
}());
exports.default = Extractor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2Vwcy9leHRyYWN0b3IvZXh0cmFjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRUFBbUU7QUFDbkUsK0RBQTREO0FBQzVELGlFQUErRDtBQUMvRCwrREFBNEQ7QUFDNUQsOERBQTJEO0FBRTNELG9EQUE4QztBQUU5Qyw4REFBa0Y7QUFFbEYsa0VBQThEO0FBQzlELHNEQUE0RDtBQUM1RCxrRUFBMEM7QUFDMUMsMEVBQWtEO0FBQ2xELHlEQUEwRDtBQUMxRCx3RUFBZ0Q7QUFFaEQ7SUFVRSxtQkFDRSxXQUFtQixFQUNuQixPQUF5QixFQUN6QixhQUFxQixFQUNyQixRQUFnQixFQUNoQixjQUFzQixFQUN0QixxQkFBNEM7UUFFNUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUE7UUFDakIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUE7UUFDOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLDJCQUFnQixDQUFDLFdBQVcsRUFBRSxPQUFPLEVBQUUsRUFBRSxhQUFhLGVBQUEsRUFBRSxjQUFjLGdCQUFBLEVBQUUsQ0FBQyxDQUFBO1FBQzVGLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxtQ0FBZSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUMsQ0FBQTtRQUN6RSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksZ0NBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO1FBRS9ELElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSwwQkFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUE7UUFDbkcsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLHVCQUFZLENBQ2xDLFFBQVEsRUFDUixhQUFhLEVBQ2IsV0FBVyxFQUNYLE9BQU8sQ0FBQyxZQUFZLEVBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUNuQixJQUFJLENBQUMsZUFBZSxDQUNyQixDQUFBO0lBQ0gsQ0FBQztJQUVPLHdDQUFvQixHQUE1Qjs7O1FBQ0UsSUFBTSxZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQVUsQ0FBQTtRQUN0QyxJQUFNLE1BQU0sR0FBRyxNQUFBLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUywwQ0FBRSxNQUFNLENBQUE7UUFDN0MsSUFBSSxNQUFNLEVBQUU7O2dCQUNWLEtBQWdCLElBQUEsV0FBQSxTQUFBLE1BQU0sQ0FBQSw4QkFBQSxrREFBRTtvQkFBbkIsSUFBTSxDQUFDLG1CQUFBO29CQUNWLElBQUksZ0JBQWdCLEdBQUcsQ0FBQyxDQUFBO29CQUN4QixJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFBO29CQUN0QixPQUFPLFlBQVksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUU7d0JBQ2xDLGdCQUFnQixFQUFFLENBQUE7d0JBQ2xCLFNBQVMsR0FBRyxVQUFHLENBQUMsQ0FBQyxJQUFJLGVBQUssZ0JBQWdCLE1BQUcsQ0FBQTtxQkFDOUM7b0JBQ0QsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLFNBQVMsRUFBRTt3QkFDdkIsQ0FBQyxDQUFDLElBQUksR0FBRyxTQUFTLENBQUE7cUJBQ25CO29CQUNELFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBO2lCQUN6Qjs7Ozs7Ozs7O1NBQ0Y7SUFDSCxDQUFDO0lBRUsseUJBQUssR0FBWCxVQUFZLFdBQXdCOzs7Ozs7d0JBQ2xDLG1CQUFNLENBQUMsSUFBSSxDQUFDOzRCQUNWLEtBQUssRUFBRSx3QkFBd0I7NEJBQy9CLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVk7NEJBQ3ZDLGFBQWEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWE7eUJBQzFDLENBQUMsQ0FBQTt3QkFFVyxxQkFBTSxJQUFBLG1DQUFvQixFQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsV0FBVyxDQUFDLEVBQUE7O3dCQUEvRixJQUFJLEdBQUcsU0FBd0Y7Ozs7NkJBSy9GLENBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxLQUFLLFNBQVMsQ0FBQSxFQUE5Qyx3QkFBOEM7d0JBQ3hDLGFBQWEsR0FBSyxJQUFJLENBQUMsT0FBTyxjQUFqQixDQUFpQjt3QkFDdEMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxhQUFhLENBQUMsQ0FBQTt3QkFDdkQscUJBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQywwQkFBMEIsQ0FBQyxnQ0FBYyxDQUFDLElBQUksQ0FBQyxFQUFBOzt3QkFBMUUsU0FBMEUsQ0FBQTt3QkFDMUUscUJBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQywwQkFBMEIsQ0FBQyxnQ0FBYyxDQUFDLGVBQWUsQ0FBQyxFQUFBOzt3QkFBckYsU0FBcUYsQ0FBQTt3QkFDckYscUJBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxzQkFBc0IsQ0FBQyxhQUFhLENBQUMsRUFBQTs7d0JBQWhFLFNBQWdFLENBQUE7d0JBRWhFLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO3dCQUMzQixNQUFNLEdBQUcsa0NBQWUsQ0FBQyxVQUFVLENBQUE7Ozt3QkFFbkMsNEVBQTRFO3dCQUM1RSxNQUFNLEdBQUcsa0NBQWUsQ0FBQyxVQUFVLENBQUEsQ0FBQywrQ0FBK0M7Ozs7O3dCQUdyRixtQkFBTSxDQUFDLFdBQVcsQ0FBQyx3QkFBVSxDQUFDLFNBQVMsRUFBRSwyQkFBWSxDQUFDLE1BQU0sRUFBRSx3QkFBVSxDQUFDLFFBQVEsRUFBRSxHQUFDLENBQUMsQ0FBQTt3QkFDckYsTUFBTSxHQUFHLGtDQUFlLENBQUMsVUFBVSxDQUFBLENBQUMsb0JBQW9CO3dCQUN4RCxZQUFZLEdBQUcsR0FBQyxDQUFDLE9BQU8sQ0FBQTt3QkFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQTs7O3dCQUdqRCxJQUFBLHdDQUFvQixFQUFDOzRCQUNuQixJQUFJLE1BQUE7NEJBQ0osTUFBTSxRQUFBOzRCQUNOLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVzs0QkFDN0IsWUFBWSxjQUFBO3lCQUNiLENBQUMsQ0FBQTs7Ozs7S0FDSDtJQUNILGdCQUFDO0FBQUQsQ0FBQyxBQTlGRCxJQThGQyJ9