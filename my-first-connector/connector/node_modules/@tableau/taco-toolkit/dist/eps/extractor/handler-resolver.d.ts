import { TacoFileParserName } from '../../shared/enums/taco-file-parser';
import { HandlerInput } from '../../shared/types/handler-input';
interface HandlerConfig {
    path: string;
    className: string;
}
export interface Handlers {
    auth?: HandlerConfig;
    fetcher: HandlerConfig;
    parser: HandlerConfig | TacoFileParserName;
    storagePath: string;
}
declare const handlersMetadata: {
    readonly auth: {
        readonly required: false;
    };
    readonly fetcher: {
        readonly required: true;
    };
    readonly parser: {
        readonly required: true;
    };
};
export type HandlerType = keyof typeof handlersMetadata;
/**
 * Resolve the handlerInput from the connector app into the addressable information.
 *
 * @param handlersDirPath the connection handler directory path
 * @param handlerInput the handlerInput object from the connector app. This is an untrusted input from userland.
 * @returns an object that contains resolved information of the handlers
 */
export declare function resolveHandlers(handlersDirPath: string, handlerInput: Partial<HandlerInput>): Handlers;
export declare function isHandlerConfig(parser: Handlers['parser']): parser is HandlerConfig;
export {};
