import { SecretsType } from '../../shared/types/secrets-type';
import { ConnectorLaunchStatus } from '../../shared/enums/connector-launch-status';
import { ExtractorType } from '../../shared/enums/extractor-type';
import { ConnectionData } from '../../shared/types/connection-data';
import { SchemaDoneExtractorMessage } from './extractor-message';
interface BaseExtractorLaunchSuccessOptions {
    type: 'success';
    connectionData: ConnectionData;
    secrets: SecretsType | undefined;
}
export type ExtractorLaunchSuccessOptions = EpsExtractorLaunchSuccessOptions | HyperExtractorLaunchSuccessOptions;
interface EpsExtractorLaunchSuccessOptions extends BaseExtractorLaunchSuccessOptions {
    extractorType: ExtractorType.eps;
    extractorMessage: SchemaDoneExtractorMessage;
    connectionData: ConnectionData;
    secrets: SecretsType | undefined;
}
interface HyperExtractorLaunchSuccessOptions extends BaseExtractorLaunchSuccessOptions {
    extractorType: ExtractorType.hyper;
}
export interface ExtractorLaunchFailureOptions {
    type: 'failure';
    error: Error;
    connectorLaunchStatus: ConnectorLaunchStatus;
}
export declare function isExtractorLaunchFailureOptions(obj: ExtractorLaunchSuccessOptions | ExtractorLaunchFailureOptions): obj is ExtractorLaunchFailureOptions;
export {};
