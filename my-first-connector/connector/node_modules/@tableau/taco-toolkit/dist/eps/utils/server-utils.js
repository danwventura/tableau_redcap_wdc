"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.closeHttpServer = exports.startHttpServer = exports.startServerWithRetry = void 0;
var eps_logger_1 = require("../logging/eps-logger");
/**
 * Starts a server with auto-assigned port from PortManager.
 *
 * The function will re-try on a different port if the startServer function throws
 * an error with property code: 'EADDRINUSE', for a maximum of 5 attempts.
 *
 * @param startServer An async function responsible for starting the server on a given port
 * @param portManager The manager responsible for assigning and reserving ports
 * @returns The port number on which the server is successfully started
 */
function startServerWithRetry(startServer, portManager) {
    return __awaiter(this, void 0, void 0, function () {
        var retries, attempts, port, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    retries = 5;
                    attempts = [];
                    _a.label = 1;
                case 1:
                    if (!(retries > 0)) return [3 /*break*/, 7];
                    return [4 /*yield*/, portManager.reserveUnusedPort()];
                case 2:
                    port = _a.sent();
                    _a.label = 3;
                case 3:
                    _a.trys.push([3, 5, , 6]);
                    return [4 /*yield*/, startServer(port)];
                case 4:
                    _a.sent();
                    return [2 /*return*/, port];
                case 5:
                    e_1 = _a.sent();
                    if (e_1.code === 'EADDRINUSE') {
                        eps_logger_1.Logger.warn(e_1);
                        retries--;
                        attempts.push(port);
                        return [3 /*break*/, 1];
                    }
                    throw e_1;
                case 6: return [3 /*break*/, 1];
                case 7: throw new Error("listen EADDRINUSE: addresses already in use: ".concat(attempts));
            }
        });
    });
}
exports.startServerWithRetry = startServerWithRetry;
/**
 * Starts an HTTP server on the given port.
 */
function startHttpServer(server, port) {
    return new Promise(function (resolve, reject) {
        server
            .listen(port, function () {
            resolve();
        })
            .on('error', function (error) {
            reject(error);
        });
    });
}
exports.startHttpServer = startHttpServer;
function closeHttpServer(server) {
    return new Promise(function (resolve, reject) {
        server.close(function (error) {
            if (error) {
                reject(error);
            }
            resolve();
        });
    });
}
exports.closeHttpServer = closeHttpServer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2Vwcy91dGlscy9zZXJ2ZXItdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0Esb0RBQThDO0FBSzlDOzs7Ozs7Ozs7R0FTRztBQUNILFNBQXNCLG9CQUFvQixDQUFDLFdBQXdCLEVBQUUsV0FBd0I7Ozs7OztvQkFDdkYsT0FBTyxHQUFHLENBQUMsQ0FBQTtvQkFDVCxRQUFRLEdBQWEsRUFBRSxDQUFBOzs7eUJBRXRCLENBQUEsT0FBTyxHQUFHLENBQUMsQ0FBQTtvQkFDSCxxQkFBTSxXQUFXLENBQUMsaUJBQWlCLEVBQUUsRUFBQTs7b0JBQTVDLElBQUksR0FBRyxTQUFxQzs7OztvQkFHaEQscUJBQU0sV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFBOztvQkFBdkIsU0FBdUIsQ0FBQTtvQkFDdkIsc0JBQU8sSUFBSSxFQUFBOzs7b0JBRVgsSUFBSSxHQUFDLENBQUMsSUFBSSxLQUFLLFlBQVksRUFBRTt3QkFDM0IsbUJBQU0sQ0FBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUE7d0JBQ2QsT0FBTyxFQUFFLENBQUE7d0JBQ1QsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTt3QkFDbkIsd0JBQVE7cUJBQ1Q7b0JBRUQsTUFBTSxHQUFDLENBQUE7O3dCQUlYLE1BQU0sSUFBSSxLQUFLLENBQUMsdURBQWdELFFBQVEsQ0FBRSxDQUFDLENBQUE7Ozs7Q0FDNUU7QUF2QkQsb0RBdUJDO0FBRUQ7O0dBRUc7QUFDSCxTQUFnQixlQUFlLENBQUMsTUFBYyxFQUFFLElBQVk7SUFDMUQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBQ2pDLE1BQU07YUFDSCxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ1osT0FBTyxFQUFFLENBQUE7UUFDWCxDQUFDLENBQUM7YUFDRCxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQUMsS0FBSztZQUNqQixNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDZixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQztBQVZELDBDQVVDO0FBRUQsU0FBZ0IsZUFBZSxDQUFDLE1BQWM7SUFDNUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBQ2pDLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBQyxLQUFhO1lBQ3pCLElBQUksS0FBSyxFQUFFO2dCQUNULE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQTthQUNkO1lBQ0QsT0FBTyxFQUFFLENBQUE7UUFDWCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQztBQVRELDBDQVNDIn0=