"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeJsConsoleWriter = void 0;
var chalk_1 = __importDefault(require("chalk"));
var log_level_1 = require("../log-level");
var console_1 = require("./console");
var NodeJsConsoleWriter = /** @class */ (function (_super) {
    __extends(NodeJsConsoleWriter, _super);
    function NodeJsConsoleWriter(config) {
        var _this = _super.call(this, config) || this;
        _this.sourceName = config.sourceName;
        _this.includeTimeStamp = config.includeTimeStamp;
        return _this;
    }
    NodeJsConsoleWriter.prototype.log = function (message, level, options) {
        if (!this.isLoggable(level)) {
            return;
        }
        var prefixes = [];
        if (this.includeTimeStamp) {
            prefixes.push("[".concat(new Date().toISOString(), "]"));
        }
        if (this.sourceName) {
            prefixes.push("[".concat(this.sourceName, "]"));
        }
        message = "".concat(prefixes.join('')).concat(message);
        switch (level) {
            case log_level_1.LogLevel.WARNING: {
                _super.prototype.log.call(this, chalk_1.default.yellow(message), level);
                break;
            }
            case log_level_1.LogLevel.ERROR:
            case log_level_1.LogLevel.TRACE: {
                _super.prototype.log.call(this, chalk_1.default.red(message), level);
                break;
            }
            case log_level_1.LogLevel.DEBUG:
            case log_level_1.LogLevel.INFO: {
                var formatted = formatMessage(message, options === null || options === void 0 ? void 0 : options.highlight);
                _super.prototype.log.call(this, formatted, level);
                break;
            }
            default:
                console.log(message);
        }
    };
    return NodeJsConsoleWriter;
}(console_1.ConsoleWriter));
exports.NodeJsConsoleWriter = NodeJsConsoleWriter;
function formatMessage(message, highlight) {
    if (highlight) {
        return highlight.replace('%s', message);
    }
    return message;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZWpzLWNvbnNvbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xvZ2dlci93cml0ZXIvbm9kZWpzLWNvbnNvbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQXlCO0FBRXpCLDBDQUF1QztBQUV2QyxxQ0FBOEQ7QUFPOUQ7SUFBeUMsdUNBQWE7SUFJcEQsNkJBQVksTUFBaUM7UUFBN0MsWUFDRSxrQkFBTSxNQUFNLENBQUMsU0FHZDtRQUZDLEtBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQTtRQUNuQyxLQUFJLENBQUMsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFBOztJQUNqRCxDQUFDO0lBRUQsaUNBQUcsR0FBSCxVQUFJLE9BQWUsRUFBRSxLQUFlLEVBQUUsT0FBb0I7UUFDeEQsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDM0IsT0FBTTtTQUNQO1FBRUQsSUFBTSxRQUFRLEdBQWEsRUFBRSxDQUFBO1FBQzdCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3pCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBSSxJQUFJLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRSxNQUFHLENBQUMsQ0FBQTtTQUMvQztRQUVELElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixRQUFRLENBQUMsSUFBSSxDQUFDLFdBQUksSUFBSSxDQUFDLFVBQVUsTUFBRyxDQUFDLENBQUE7U0FDdEM7UUFFRCxPQUFPLEdBQUcsVUFBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFHLE9BQU8sQ0FBRSxDQUFBO1FBRTFDLFFBQVEsS0FBSyxFQUFFO1lBQ2IsS0FBSyxvQkFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNyQixpQkFBTSxHQUFHLFlBQUMsZUFBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQTtnQkFDdkMsTUFBSzthQUNOO1lBQ0QsS0FBSyxvQkFBUSxDQUFDLEtBQUssQ0FBQztZQUNwQixLQUFLLG9CQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ25CLGlCQUFNLEdBQUcsWUFBQyxlQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFBO2dCQUNwQyxNQUFLO2FBQ047WUFDRCxLQUFLLG9CQUFRLENBQUMsS0FBSyxDQUFDO1lBQ3BCLEtBQUssb0JBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbEIsSUFBTSxTQUFTLEdBQUcsYUFBYSxDQUFDLE9BQU8sRUFBRSxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsU0FBUyxDQUFDLENBQUE7Z0JBQzVELGlCQUFNLEdBQUcsWUFBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUE7Z0JBQzNCLE1BQUs7YUFDTjtZQUNEO2dCQUNFLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUE7U0FDdkI7SUFDSCxDQUFDO0lBQ0gsMEJBQUM7QUFBRCxDQUFDLEFBOUNELENBQXlDLHVCQUFhLEdBOENyRDtBQTlDWSxrREFBbUI7QUFnRGhDLFNBQVMsYUFBYSxDQUFDLE9BQWUsRUFBRSxTQUFrQjtJQUN4RCxJQUFJLFNBQVMsRUFBRTtRQUNiLE9BQU8sU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUE7S0FDeEM7SUFFRCxPQUFPLE9BQU8sQ0FBQTtBQUNoQixDQUFDIn0=