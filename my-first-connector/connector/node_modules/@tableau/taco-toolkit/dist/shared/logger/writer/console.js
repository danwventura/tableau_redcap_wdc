"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsoleWriter = void 0;
var log_level_1 = require("../log-level");
var writer_1 = require("./writer");
var ConsoleWriter = /** @class */ (function (_super) {
    __extends(ConsoleWriter, _super);
    function ConsoleWriter(config) {
        return _super.call(this, config) || this;
    }
    ConsoleWriter.prototype.log = function (message, level) {
        if (!this.isLoggable(level)) {
            return;
        }
        switch (level) {
            case log_level_1.LogLevel.WARNING: {
                console.warn(message);
                break;
            }
            case log_level_1.LogLevel.ERROR:
            case log_level_1.LogLevel.TRACE: {
                console.error(message);
                break;
            }
            case log_level_1.LogLevel.DEBUG:
            case log_level_1.LogLevel.INFO: {
                console.log(message);
                break;
            }
            default:
                console.log(message);
        }
    };
    return ConsoleWriter;
}(writer_1.Writer));
exports.ConsoleWriter = ConsoleWriter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc29sZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbG9nZ2VyL3dyaXRlci9jb25zb2xlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDBDQUF1QztBQUN2QyxtQ0FBK0M7QUFJL0M7SUFBbUMsaUNBQU07SUFDdkMsdUJBQVksTUFBMkI7ZUFDckMsa0JBQU0sTUFBTSxDQUFDO0lBQ2YsQ0FBQztJQUVELDJCQUFHLEdBQUgsVUFBSSxPQUFlLEVBQUUsS0FBZTtRQUNsQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUMzQixPQUFNO1NBQ1A7UUFFRCxRQUFRLEtBQUssRUFBRTtZQUNiLEtBQUssb0JBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDckIsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtnQkFDckIsTUFBSzthQUNOO1lBQ0QsS0FBSyxvQkFBUSxDQUFDLEtBQUssQ0FBQztZQUNwQixLQUFLLG9CQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUE7Z0JBQ3RCLE1BQUs7YUFDTjtZQUNELEtBQUssb0JBQVEsQ0FBQyxLQUFLLENBQUM7WUFDcEIsS0FBSyxvQkFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO2dCQUNwQixNQUFLO2FBQ047WUFDRDtnQkFDRSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1NBQ3ZCO0lBQ0gsQ0FBQztJQUNILG9CQUFDO0FBQUQsQ0FBQyxBQTdCRCxDQUFtQyxlQUFNLEdBNkJ4QztBQTdCWSxzQ0FBYSJ9