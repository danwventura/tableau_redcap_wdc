"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeHeaders = exports.request = void 0;
var superagent_1 = __importDefault(require("superagent"));
var type_utils_1 = require("../type-utils");
function request(url, requestConfig) {
    var method = requestConfig.method, headers = requestConfig.headers, query = requestConfig.query, body = requestConfig.body;
    return (0, superagent_1.default)(method, url)
        .set(headers ? normalizeHeaders(headers) : {})
        .query(query !== null && query !== void 0 ? query : {})
        .send(body);
}
exports.request = request;
/**
 * Normalize header object which has unknown type values.
 *
 * When a header value is not string type, the function converts it into string.
 * The function also filter out the entries with null or undefined value.
 */
function normalizeHeaders(obj) {
    var e_1, _a;
    var normalized = {};
    try {
        for (var _b = __values(Object.entries(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
            if (value === null || value === undefined) {
                continue;
            }
            normalized[key] = (0, type_utils_1.stringifyUnknown)(value);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return normalized;
}
exports.normalizeHeaders = normalizeHeaders;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFyZWQvYXBwLXRyYW5zcG9ydC9yZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDBEQUEwRDtBQUUxRCw0Q0FBZ0Q7QUF1QmhELFNBQWdCLE9BQU8sQ0FBQyxHQUFXLEVBQUUsYUFBNEI7SUFDdkQsSUFBQSxNQUFNLEdBQTJCLGFBQWEsT0FBeEMsRUFBRSxPQUFPLEdBQWtCLGFBQWEsUUFBL0IsRUFBRSxLQUFLLEdBQVcsYUFBYSxNQUF4QixFQUFFLElBQUksR0FBSyxhQUFhLEtBQWxCLENBQWtCO0lBRXRELE9BQU8sSUFBQSxvQkFBVSxFQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7U0FDM0IsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztTQUM3QyxLQUFLLENBQUMsS0FBSyxhQUFMLEtBQUssY0FBTCxLQUFLLEdBQUksRUFBRSxDQUFDO1NBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNmLENBQUM7QUFQRCwwQkFPQztBQUVEOzs7OztHQUtHO0FBQ0gsU0FBZ0IsZ0JBQWdCLENBQUMsR0FBNEI7O0lBQzNELElBQU0sVUFBVSxHQUEyQixFQUFFLENBQUE7O1FBRTdDLEtBQTJCLElBQUEsS0FBQSxTQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7WUFBckMsSUFBQSxLQUFBLG1CQUFZLEVBQVgsR0FBRyxRQUFBLEVBQUUsS0FBSyxRQUFBO1lBQ3BCLElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO2dCQUN6QyxTQUFRO2FBQ1Q7WUFFRCxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBQSw2QkFBZ0IsRUFBQyxLQUFLLENBQUMsQ0FBQTtTQUMxQzs7Ozs7Ozs7O0lBQ0QsT0FBTyxVQUFVLENBQUE7QUFDbkIsQ0FBQztBQVhELDRDQVdDIn0=